definitions:
  requests.AuthRequest:
    properties:
      email:
        description: User's email address (must be valid email format)
        type: string
      password:
        description: User's password (minimum 6 characters)
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  requests.CreateCardRequest:
    properties:
      card_provider:
        description: Issuing bank/provider (e.g., "VISA", "MasterCard")
        type: string
      card_type:
        description: Type of card ("credit" or "debit")
        type: string
      cvv:
        description: Card verification value (should be encrypted at rest)
        type: string
      expire_date:
        description: Card expiration date
        type: string
      user_id:
        description: ID of the user who owns the card
        type: integer
    required:
    - card_provider
    - card_type
    - cvv
    - expire_date
    type: object
  requests.CreateMerchantDocumentRequest:
    properties:
      document_type:
        description: Type of document (e.g., "license", "identity_proof")
        type: string
      document_url:
        description: URL or storage path where the document is saved
        type: string
      merchant_id:
        description: ID of the merchant this document belongs to
        minimum: 1
        type: integer
    required:
    - document_type
    - document_url
    - merchant_id
    type: object
  requests.CreateMerchantRequest:
    properties:
      name:
        description: Legal name of the merchant
        type: string
      user_id:
        description: ID of the user creating the merchant
        minimum: 1
        type: integer
    required:
    - name
    - user_id
    type: object
  requests.CreateResetPasswordRequest:
    properties:
      confirm_password:
        description: Password confirmation (must match new password)
        minLength: 6
        type: string
      password:
        description: New password (minimum 6 characters)
        minLength: 6
        type: string
      reset_token:
        description: The reset token provided to the user
        type: string
    required:
    - confirm_password
    - password
    - reset_token
    type: object
  requests.CreateRoleRequest:
    properties:
      name:
        description: Name of the new role (e.g., "admin", "user")
        type: string
    required:
    - name
    type: object
  requests.CreateSaldoRequest:
    properties:
      card_number:
        description: Card number associated with the balance
        type: string
      total_balance:
        description: Initial balance amount (in smallest currency unit)
        type: integer
    required:
    - card_number
    - total_balance
    type: object
  requests.CreateTopupRequest:
    properties:
      card_number:
        description: Card number receiving funds
        minLength: 1
        type: string
      topup_amount:
        description: Amount to add (minimum 50,000 in smallest unit)
        minimum: 50000
        type: integer
      topup_method:
        description: Payment method used (e.g., "bank_transfer")
        type: string
    required:
    - card_number
    - topup_amount
    - topup_method
    type: object
  requests.CreateTransactionRequest:
    properties:
      amount:
        description: Transaction amount (minimum 50,000 in smallest unit)
        minimum: 50000
        type: integer
      card_number:
        description: Card number used in transaction
        minLength: 1
        type: string
      merchant_id:
        description: ID of merchant receiving payment
        minimum: 1
        type: integer
      payment_method:
        description: Payment method used (e.g., "credit", "debit")
        type: string
      transaction_time:
        description: Timestamp of transaction
        type: string
    required:
    - amount
    - card_number
    - merchant_id
    - payment_method
    - transaction_time
    type: object
  requests.CreateTransferRequest:
    properties:
      transfer_amount:
        description: Amount to transfer (minimum 50,000 in smallest unit)
        minimum: 50000
        type: integer
      transfer_from:
        description: Source account/card number
        type: string
      transfer_to:
        description: Destination account/card number (minimum 1 character)
        minLength: 1
        type: string
    required:
    - transfer_amount
    - transfer_from
    - transfer_to
    type: object
  requests.CreateUserRequest:
    properties:
      confirm_password:
        description: Password confirmation (must match Password field)
        type: string
      email:
        description: User's email address (must be valid format)
        type: string
      firstname:
        description: User's first name (alphabetic characters only)
        type: string
      lastname:
        description: User's last name (alphabetic characters only)
        type: string
      password:
        description: Account password (minimum 6 characters)
        minLength: 6
        type: string
    required:
    - confirm_password
    - email
    - firstname
    - lastname
    - password
    type: object
  requests.CreateWithdrawRequest:
    properties:
      card_number:
        description: Card/account number for withdrawal
        minLength: 1
        type: string
      withdraw_amount:
        description: Amount to withdraw (minimum 50,000 in smallest unit)
        minimum: 50000
        type: integer
      withdraw_time:
        description: Timestamp of withdrawal
        type: string
    required:
    - card_number
    - withdraw_amount
    - withdraw_time
    type: object
  requests.ForgotPasswordRequest:
    properties:
      email:
        description: Email address associated with the account
        type: string
    required:
    - email
    type: object
  requests.RefreshTokenRequest:
    properties:
      refresh_token:
        description: The refresh token to validate/redeem
        minLength: 1
        type: string
    required:
    - refresh_token
    type: object
  requests.UpdateCardRequest:
    properties:
      card_id:
        description: ID of the card being updated
        minimum: 1
        type: integer
      card_provider:
        description: Updated card provider
        type: string
      card_type:
        description: Updated card type ("credit" or "debit")
        type: string
      cvv:
        description: Updated card verification value
        type: string
      expire_date:
        description: Updated expiration date
        type: string
      user_id:
        description: ID of the card owner (for verification)
        minimum: 1
        type: integer
    required:
    - card_id
    - card_provider
    - card_type
    - cvv
    - expire_date
    - user_id
    type: object
  requests.UpdateMerchantDocumentRequest:
    properties:
      document_id:
        description: ID of the document being updated (optional in some flows)
        type: integer
      document_type:
        description: Updated document type
        type: string
      document_url:
        description: Updated document URL/path
        type: string
      merchant_id:
        description: ID of the merchant (for verification)
        minimum: 1
        type: integer
      note:
        description: Administrative notes about the document
        type: string
      status:
        description: Updated review status (e.g., "pending", "approved")
        type: string
    required:
    - document_type
    - document_url
    - merchant_id
    - note
    - status
    type: object
  requests.UpdateMerchantDocumentStatusRequest:
    properties:
      document_id:
        description: ID of the document being updated (optional in some flows)
        type: integer
      merchant_id:
        description: ID of the merchant (for verification)
        minimum: 1
        type: integer
      note:
        description: Explanation for status change
        type: string
      status:
        description: New review status (e.g., "approved", "rejected")
        type: string
    required:
    - merchant_id
    - note
    - status
    type: object
  requests.UpdateMerchantRequest:
    properties:
      merchant_id:
        description: ID of merchant to update (optional in some flows)
        type: integer
      name:
        description: Updated merchant name
        type: string
      status:
        description: New status (e.g., "active", "suspended")
        type: string
      user_id:
        description: ID of user performing update
        minimum: 1
        type: integer
    required:
    - name
    - status
    - user_id
    type: object
  requests.UpdateMerchantStatusRequest:
    properties:
      merchant_id:
        description: ID of merchant to update (optional in some flows)
        type: integer
      status:
        description: New status (e.g., "approved", "rejected")
        type: string
    required:
    - status
    type: object
  requests.UpdateRoleRequest:
    properties:
      id:
        description: ID of the role to update (optional in some flows)
        type: integer
      name:
        description: New name for the role
        type: string
    required:
    - name
    type: object
  requests.UpdateSaldoRequest:
    properties:
      card_number:
        description: Card number associated with the balance
        type: string
      saldo_id:
        description: ID of the saldo record (optional in some flows)
        type: integer
      total_balance:
        description: Updated balance amount (in smallest currency unit)
        type: integer
    required:
    - card_number
    - total_balance
    type: object
  requests.UpdateTopupRequest:
    properties:
      card_number:
        description: Card number associated with top-up
        minLength: 1
        type: string
      topup_amount:
        description: Updated amount (minimum 50,000)
        minimum: 50000
        type: integer
      topup_id:
        description: ID of top-up record to update
        type: integer
      topup_method:
        description: Updated payment method
        type: string
    required:
    - card_number
    - topup_amount
    - topup_method
    type: object
  requests.UpdateTransactionRequest:
    properties:
      amount:
        description: Updated amount (minimum 50,000)
        minimum: 50000
        type: integer
      card_number:
        description: Updated card number
        minLength: 1
        type: string
      merchant_id:
        description: Updated merchant ID
        minimum: 1
        type: integer
      payment_method:
        description: Updated payment method
        type: string
      transaction_id:
        description: ID of transaction to update
        type: integer
      transaction_time:
        description: Updated transaction timestamp
        type: string
    required:
    - amount
    - card_number
    - merchant_id
    - payment_method
    - transaction_time
    type: object
  requests.UpdateTransferRequest:
    properties:
      transfer_amount:
        description: Updated transfer amount (minimum 50,000)
        minimum: 50000
        type: integer
      transfer_from:
        description: Updated source account/card
        type: string
      transfer_id:
        description: ID of transfer to update
        type: integer
      transfer_to:
        description: Updated destination account/card
        minLength: 1
        type: string
    required:
    - transfer_amount
    - transfer_from
    - transfer_to
    type: object
  requests.UpdateUserRequest:
    properties:
      confirm_password:
        description: Password confirmation
        type: string
      email:
        description: Updated email address
        type: string
      firstname:
        description: Updated first name
        type: string
      lastname:
        description: Updated last name
        type: string
      password:
        description: New password
        minLength: 6
        type: string
      user_id:
        description: ID of user to update (optional in some flows)
        type: integer
    required:
    - confirm_password
    - email
    - firstname
    - lastname
    - password
    type: object
  requests.UpdateWithdrawRequest:
    properties:
      card_number:
        description: Card/account number
        minLength: 1
        type: string
      withdraw_amount:
        description: Updated withdrawal amount
        minimum: 50000
        type: integer
      withdraw_id:
        description: ID of withdrawal to update
        type: integer
      withdraw_time:
        description: Updated withdrawal timestamp
        type: string
    required:
    - card_number
    - withdraw_amount
    - withdraw_time
    type: object
  response.ApiResponseCard:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/response.CardResponse'
        description: Card data payload
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status ("success" or "error")
        type: string
    type: object
  response.ApiResponseCardAll:
    properties:
      message:
        description: Result message
        type: string
      status:
        description: Operation status
        type: string
    type: object
  response.ApiResponseCardDelete:
    properties:
      message:
        description: Result message
        type: string
      status:
        description: Operation status
        type: string
    type: object
  response.ApiResponseDashboardCard:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/response.DashboardCard'
        description: Dashboard statistics
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseDashboardCardNumber:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/response.DashboardCardCardNumber'
        description: Card-specific statistics
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseForgotPassword:
    properties:
      message:
        description: Result message ("Reset link sent to email")
        type: string
      status:
        description: Operation status
        type: string
    type: object
  response.ApiResponseGetMe:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/response.UserResponse'
        description: Complete user profile data
      message:
        description: Descriptive message
        type: string
      status:
        description: Always "success" for valid requests
        type: string
    type: object
  response.ApiResponseLogin:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/response.TokenResponse'
        description: Authentication tokens
      message:
        description: Welcome message
        type: string
      status:
        description: Always "success" for this response
        type: string
    type: object
  response.ApiResponseMerchant:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/response.MerchantResponse'
        description: Single merchant data
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseMerchantAll:
    properties:
      message:
        description: Result message
        type: string
      status:
        description: Operation status
        type: string
    type: object
  response.ApiResponseMerchantDelete:
    properties:
      message:
        description: Result message
        type: string
      status:
        description: Operation status
        type: string
    type: object
  response.ApiResponseMerchantDocument:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/response.MerchantDocumentResponse'
        description: Single document response
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseMerchantDocumentAll:
    properties:
      message:
        description: Result message
        type: string
      status:
        description: Operation status
        type: string
    type: object
  response.ApiResponseMerchantDocumentDelete:
    properties:
      message:
        description: Result message
        type: string
      status:
        description: Operation status
        type: string
    type: object
  response.ApiResponseMerchantMonthlyAmount:
    properties:
      data:
        description: Array of monthly amounts
        items:
          $ref: '#/definitions/response.MerchantResponseMonthlyAmount'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseMerchantMonthlyPaymentMethod:
    properties:
      data:
        description: Array of monthly payment method data
        items:
          $ref: '#/definitions/response.MerchantResponseMonthlyPaymentMethod'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseMerchantYearlyAmount:
    properties:
      data:
        description: Array of yearly amounts
        items:
          $ref: '#/definitions/response.MerchantResponseYearlyAmount'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseMerchantYearlyPaymentMethod:
    properties:
      data:
        description: Array of yearly payment method data
        items:
          $ref: '#/definitions/response.MerchantResponseYearlyPaymentMethod'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseMonthSaldoBalances:
    properties:
      data:
        description: Array of monthly balances
        items:
          $ref: '#/definitions/response.SaldoMonthBalanceResponse'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseMonthTotalSaldo:
    properties:
      data:
        description: Array of monthly total balances
        items:
          $ref: '#/definitions/response.SaldoMonthTotalBalanceResponse'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseMonthlyAmount:
    properties:
      data:
        description: Array of monthly amounts
        items:
          $ref: '#/definitions/response.CardResponseMonthAmount'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseMonthlyBalance:
    properties:
      data:
        description: Array of monthly balances
        items:
          $ref: '#/definitions/response.CardResponseMonthBalance'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsePaginationCard:
    properties:
      data:
        description: Array of card data
        items:
          $ref: '#/definitions/response.CardResponse'
        type: array
      message:
        description: Descriptive message
        type: string
      pagination:
        allOf:
        - $ref: '#/definitions/response.PaginationMeta'
        description: Pagination metadata
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsePaginationCardDeleteAt:
    properties:
      data:
        description: Array of card data (with deletion info)
        items:
          $ref: '#/definitions/response.CardResponseDeleteAt'
        type: array
      message:
        description: Descriptive message
        type: string
      pagination:
        allOf:
        - $ref: '#/definitions/response.PaginationMeta'
        description: Pagination metadata
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsePaginationMerchant:
    properties:
      data:
        description: Array of merchant data
        items:
          $ref: '#/definitions/response.MerchantResponse'
        type: array
      message:
        description: Descriptive message
        type: string
      pagination:
        allOf:
        - $ref: '#/definitions/response.PaginationMeta'
        description: Pagination metadata
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsePaginationMerchantDocument:
    properties:
      data:
        description: Array of document data
        items:
          $ref: '#/definitions/response.MerchantDocumentResponse'
        type: array
      message:
        description: Descriptive message
        type: string
      pagination:
        allOf:
        - $ref: '#/definitions/response.PaginationMeta'
        description: Pagination metadata
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsePaginationMerchantDocumentDeleteAt:
    properties:
      data:
        description: Array of documents (with deletion info)
        items:
          $ref: '#/definitions/response.MerchantDocumentResponseDeleteAt'
        type: array
      message:
        description: Descriptive message
        type: string
      pagination:
        allOf:
        - $ref: '#/definitions/response.PaginationMeta'
        description: Pagination metadata
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsePaginationRole:
    properties:
      data:
        description: Array of role data
        items:
          $ref: '#/definitions/response.RoleResponse'
        type: array
      message:
        description: Descriptive message
        type: string
      pagination:
        allOf:
        - $ref: '#/definitions/response.PaginationMeta'
        description: Pagination metadata
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsePaginationRoleDeleteAt:
    properties:
      data:
        description: Array of role data (with deletion info)
        items:
          $ref: '#/definitions/response.RoleResponseDeleteAt'
        type: array
      message:
        description: Descriptive message
        type: string
      pagination:
        allOf:
        - $ref: '#/definitions/response.PaginationMeta'
        description: Pagination metadata
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsePaginationSaldo:
    properties:
      data:
        description: Array of saldo data
        items:
          $ref: '#/definitions/response.SaldoResponse'
        type: array
      message:
        description: Descriptive message
        type: string
      pagination:
        allOf:
        - $ref: '#/definitions/response.PaginationMeta'
        description: Pagination metadata
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsePaginationTopup:
    properties:
      data:
        description: Array of top-up data
        items:
          $ref: '#/definitions/response.TopupResponse'
        type: array
      message:
        description: Descriptive message
        type: string
      pagination:
        allOf:
        - $ref: '#/definitions/response.PaginationMeta'
        description: Pagination metadata
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsePaginationTransaction:
    properties:
      data:
        description: Array of transaction data
        items:
          $ref: '#/definitions/response.TransactionResponse'
        type: array
      message:
        description: Response message
        type: string
      pagination:
        allOf:
        - $ref: '#/definitions/response.PaginationMeta'
        description: Pagination metadata
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsePaginationTransfer:
    properties:
      data:
        description: Array of transfer data
        items:
          $ref: '#/definitions/response.TransferResponse'
        type: array
      message:
        description: Response message
        type: string
      pagination:
        allOf:
        - $ref: '#/definitions/response.PaginationMeta'
        description: Pagination metadata
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsePaginationUser:
    properties:
      data:
        description: Array of user data
        items:
          $ref: '#/definitions/response.UserResponse'
        type: array
      message:
        description: Response message
        type: string
      pagination:
        allOf:
        - $ref: '#/definitions/response.PaginationMeta'
        description: Pagination metadata
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsePaginationWithdraw:
    properties:
      data:
        description: Array of withdrawal records
        items:
          $ref: '#/definitions/response.WithdrawResponse'
        type: array
      message:
        description: Response message
        type: string
      pagination:
        allOf:
        - $ref: '#/definitions/response.PaginationMeta'
        description: Pagination metadata
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseRefreshToken:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/response.TokenResponse'
        description: New set of authentication tokens
      message:
        description: Result message
        type: string
      status:
        description: Operation status
        type: string
    type: object
  response.ApiResponseRegister:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/response.UserResponse'
        description: Registered user's profile data
      message:
        description: Welcome/confirmation message
        type: string
      status:
        description: Operation status
        type: string
    type: object
  response.ApiResponseResetPassword:
    properties:
      message:
        description: Result message ("Password updated successfully")
        type: string
      status:
        description: Operation status
        type: string
    type: object
  response.ApiResponseRole:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/response.RoleResponse'
        description: Role data payload
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseRoleAll:
    properties:
      message:
        description: Result message
        type: string
      status:
        description: Operation status ("success" or "error")
        type: string
    type: object
  response.ApiResponseSaldo:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/response.SaldoResponse'
        description: Saldo data payload
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status ("success" or "error")
        type: string
    type: object
  response.ApiResponseSaldoAll:
    properties:
      message:
        description: Result message
        type: string
      status:
        description: Operation status
        type: string
    type: object
  response.ApiResponseSaldoDelete:
    properties:
      message:
        description: Result message
        type: string
      status:
        description: Operation status
        type: string
    type: object
  response.ApiResponseTopup:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/response.TopupResponse'
        description: Single top-up data
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTopupAll:
    properties:
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTopupDelete:
    properties:
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTopupMonthAmount:
    properties:
      data:
        description: Array of monthly amount data
        items:
          $ref: '#/definitions/response.TopupMonthAmountResponse'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTopupMonthMethod:
    properties:
      data:
        description: Array of monthly method data
        items:
          $ref: '#/definitions/response.TopupMonthMethodResponse'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTopupMonthStatusFailed:
    properties:
      data:
        description: Array of monthly failed data
        items:
          $ref: '#/definitions/response.TopupResponseMonthStatusFailed'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTopupMonthStatusSuccess:
    properties:
      data:
        description: Array of monthly success data
        items:
          $ref: '#/definitions/response.TopupResponseMonthStatusSuccess'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status (e.g., "success")
        type: string
    type: object
  response.ApiResponseTopupYearAmount:
    properties:
      data:
        description: Array of yearly amount data
        items:
          $ref: '#/definitions/response.TopupYearlyAmountResponse'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTopupYearMethod:
    properties:
      data:
        description: Array of yearly method data
        items:
          $ref: '#/definitions/response.TopupYearlyMethodResponse'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTopupYearStatusFailed:
    properties:
      data:
        description: Array of yearly failed data
        items:
          $ref: '#/definitions/response.TopupResponseYearStatusFailed'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTopupYearStatusSuccess:
    properties:
      data:
        description: Array of yearly success data
        items:
          $ref: '#/definitions/response.TopupResponseYearStatusSuccess'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransaction:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/response.TransactionResponse'
        description: Single transaction data
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransactionAll:
    properties:
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransactionDelete:
    properties:
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransactionMonthAmount:
    properties:
      data:
        description: Array of monthly amount data
        items:
          $ref: '#/definitions/response.TransactionMonthAmountResponse'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransactionMonthMethod:
    properties:
      data:
        description: Array of monthly method data
        items:
          $ref: '#/definitions/response.TransactionMonthMethodResponse'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransactionMonthStatusFailed:
    properties:
      data:
        description: Array of monthly failed data
        items:
          $ref: '#/definitions/response.TransactionResponseMonthStatusFailed'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransactionMonthStatusSuccess:
    properties:
      data:
        description: Array of monthly success data
        items:
          $ref: '#/definitions/response.TransactionResponseMonthStatusSuccess'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransactionYearAmount:
    properties:
      data:
        description: Array of yearly amount data
        items:
          $ref: '#/definitions/response.TransactionYearlyAmountResponse'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransactionYearMethod:
    properties:
      data:
        description: Array of yearly method data
        items:
          $ref: '#/definitions/response.TransactionYearMethodResponse'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransactionYearStatusFailed:
    properties:
      data:
        description: Array of yearly failed data
        items:
          $ref: '#/definitions/response.TransactionResponseYearStatusFailed'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransactionYearStatusSuccess:
    properties:
      data:
        description: Array of yearly success data
        items:
          $ref: '#/definitions/response.TransactionResponseYearStatusSuccess'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransactions:
    properties:
      data:
        description: Array of transaction data
        items:
          $ref: '#/definitions/response.TransactionResponse'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransfer:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/response.TransferResponse'
        description: Single transfer data
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransferAll:
    properties:
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransferDelete:
    properties:
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransferMonthAmount:
    properties:
      data:
        description: Array of monthly amount data
        items:
          $ref: '#/definitions/response.TransferMonthAmountResponse'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransferMonthStatusFailed:
    properties:
      data:
        description: Array of monthly failed data
        items:
          $ref: '#/definitions/response.TransferResponseMonthStatusFailed'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransferMonthStatusSuccess:
    properties:
      data:
        description: Array of monthly success data
        items:
          $ref: '#/definitions/response.TransferResponseMonthStatusSuccess'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransferYearAmount:
    properties:
      data:
        description: Array of yearly amount data
        items:
          $ref: '#/definitions/response.TransferYearAmountResponse'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransferYearStatusFailed:
    properties:
      data:
        description: Array of yearly failed data
        items:
          $ref: '#/definitions/response.TransferResponseYearStatusFailed'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransferYearStatusSuccess:
    properties:
      data:
        description: Array of yearly success data
        items:
          $ref: '#/definitions/response.TransferResponseYearStatusSuccess'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseTransfers:
    properties:
      data:
        description: Array of transfer data
        items:
          $ref: '#/definitions/response.TransferResponse'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseUser:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/response.UserResponse'
        description: Contains the user data
      message:
        description: Descriptive response message
        type: string
      status:
        description: Response status ("success" or "error")
        type: string
    type: object
  response.ApiResponseUserAll:
    properties:
      message:
        description: Operation message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseUserDelete:
    properties:
      message:
        description: Operation result message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseVerifyCode:
    properties:
      message:
        description: Result message ("Verification successful")
        type: string
      status:
        description: Operation status ("success" or "error")
        type: string
    type: object
  response.ApiResponseWithdraw:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/response.WithdrawResponse'
        description: Single withdrawal record
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseWithdrawAll:
    properties:
      message:
        description: Operation message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseWithdrawDelete:
    properties:
      message:
        description: Operation result message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseWithdrawMonthAmount:
    properties:
      data:
        description: Array of monthly amount totals
        items:
          $ref: '#/definitions/response.WithdrawMonthlyAmountResponse'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseWithdrawMonthStatusFailed:
    properties:
      data:
        description: Array of monthly failed metrics
        items:
          $ref: '#/definitions/response.WithdrawResponseMonthStatusFailed'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseWithdrawMonthStatusSuccess:
    properties:
      data:
        description: Array of monthly success metrics
        items:
          $ref: '#/definitions/response.WithdrawResponseMonthStatusSuccess'
        type: array
      message:
        description: Descriptive response message
        type: string
      status:
        description: Response status ("success" or "error")
        type: string
    type: object
  response.ApiResponseWithdrawYearAmount:
    properties:
      data:
        description: Array of yearly amount totals
        items:
          $ref: '#/definitions/response.WithdrawYearlyAmountResponse'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseWithdrawYearStatusSuccess:
    properties:
      data:
        description: Array of yearly success metrics
        items:
          $ref: '#/definitions/response.WithdrawResponseYearStatusSuccess'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseYearSaldoBalances:
    properties:
      data:
        description: Array of yearly balances
        items:
          $ref: '#/definitions/response.SaldoYearBalanceResponse'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseYearTotalSaldo:
    properties:
      data:
        description: Array of yearly total balances
        items:
          $ref: '#/definitions/response.SaldoYearTotalBalanceResponse'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseYearlyAmount:
    properties:
      data:
        description: Array of yearly amounts
        items:
          $ref: '#/definitions/response.CardResponseYearAmount'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponseYearlyBalance:
    properties:
      data:
        description: Array of yearly balances
        items:
          $ref: '#/definitions/response.CardResponseYearlyBalance'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsesMerchant:
    properties:
      data:
        description: Array of merchant data
        items:
          $ref: '#/definitions/response.MerchantResponse'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsesSaldo:
    properties:
      data:
        description: Array of saldo data
        items:
          $ref: '#/definitions/response.SaldoResponse'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsesTopup:
    properties:
      data:
        description: Array of top-up data
        items:
          $ref: '#/definitions/response.TopupResponse'
        type: array
      message:
        description: Descriptive message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsesUser:
    properties:
      data:
        description: Array of user data
        items:
          $ref: '#/definitions/response.UserResponse'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.ApiResponsesWithdraw:
    properties:
      data:
        description: Array of withdrawal records
        items:
          $ref: '#/definitions/response.WithdrawResponse'
        type: array
      message:
        description: Response message
        type: string
      status:
        description: Response status
        type: string
    type: object
  response.CardResponse:
    properties:
      card_number:
        description: Masked card number (e.g., "4242********4242")
        type: string
      card_provider:
        description: Card issuer (e.g., "Visa", "MasterCard")
        type: string
      card_type:
        description: Type of card ("credit" or "debit")
        type: string
      created_at:
        description: Timestamp when card was added (RFC3339 format)
        type: string
      cvv:
        description: Masked CVV (typically "***")
        type: string
      expire_date:
        description: Card expiration date (MM/YY format)
        type: string
      id:
        description: Unique card identifier
        type: integer
      updated_at:
        description: Timestamp when card was last updated
        type: string
      user_id:
        description: ID of the card owner
        type: integer
    type: object
  response.CardResponseDeleteAt:
    properties:
      card_number:
        description: Masked card number
        type: string
      card_provider:
        description: Card issuer
        type: string
      card_type:
        description: Type of card
        type: string
      created_at:
        description: Creation timestamp
        type: string
      cvv:
        description: Masked CVV
        type: string
      deleted_at:
        description: Deletion timestamp (nil if not deleted)
        type: string
      expire_date:
        description: Card expiration date
        type: string
      id:
        description: Unique card identifier
        type: integer
      updated_at:
        description: Last update timestamp
        type: string
      user_id:
        description: ID of the card owner
        type: integer
    type: object
  response.CardResponseMonthAmount:
    properties:
      month:
        description: Month in "YYYY-MM" format
        type: string
      total_amount:
        description: Total transaction amount for the month
        type: integer
    type: object
  response.CardResponseMonthBalance:
    properties:
      month:
        description: Month in "YYYY-MM" format
        type: string
      total_balance:
        description: Balance at month end (in smallest currency unit)
        type: integer
    type: object
  response.CardResponseYearAmount:
    properties:
      total_amount:
        description: Total transaction amount for the year
        type: integer
      year:
        description: Year in "YYYY" format
        type: string
    type: object
  response.CardResponseYearlyBalance:
    properties:
      total_balance:
        description: Balance at year end
        type: integer
      year:
        description: Year in "YYYY" format
        type: string
    type: object
  response.DashboardCard:
    properties:
      total_balance:
        description: Sum of all card balances (in smallest currency unit)
        type: integer
      total_topup:
        description: Total top-up amount this period
        type: integer
      total_transaction:
        description: Total transaction volume
        type: integer
      total_transfer:
        description: Total transfer amount
        type: integer
      total_withdraw:
        description: Total withdrawals this period
        type: integer
    type: object
  response.DashboardCardCardNumber:
    properties:
      total_balance:
        description: Current card balance
        type: integer
      total_topup:
        description: Total top-ups to this card
        type: integer
      total_transaction:
        description: Total transaction amount
        type: integer
      total_transfer_receiver:
        description: Total received via transfers
        type: integer
      total_transfer_send:
        description: Total sent via transfers
        type: integer
      total_withdraw:
        description: Total withdrawals from this card
        type: integer
    type: object
  response.ErrorResponse:
    properties:
      code:
        description: HTTP status code or application error code
        type: integer
      message:
        description: Human-readable error message
        type: string
      status:
        description: Error status ("error", "fail", etc.)
        type: string
    type: object
  response.MerchantDocumentResponse:
    properties:
      created_at:
        description: Timestamp when document was uploaded (RFC3339 format)
        type: string
      document_type:
        description: Type of document (e.g., "license", "identity_proof")
        type: string
      document_url:
        description: URL or storage path where the document is saved
        type: string
      id:
        description: Unique document identifier
        type: integer
      merchant_id:
        description: ID of the merchant this document belongs to
        type: integer
      note:
        description: Administrative notes about the document
        type: string
      status:
        description: Current status ("pending", "approved", "rejected")
        type: string
      updated_at:
        description: Timestamp when document was last updated
        type: string
    type: object
  response.MerchantDocumentResponseDeleteAt:
    properties:
      created_at:
        description: Original creation timestamp
        type: string
      deleted_at:
        description: Deletion timestamp (nil if not deleted)
        type: string
      document_type:
        description: Type of document
        type: string
      document_url:
        description: Document storage path/URL
        type: string
      id:
        description: Unique document identifier
        type: integer
      merchant_id:
        description: ID of the merchant
        type: integer
      note:
        description: Final administrative notes
        type: string
      status:
        description: Last known status before deletion
        type: string
      updated_at:
        description: Last update timestamp
        type: string
    type: object
  response.MerchantResponse:
    properties:
      api_key:
        description: Merchant's API key (typically masked in responses)
        type: string
      created_at:
        description: Timestamp when merchant was created (RFC3339 format)
        type: string
      id:
        description: Unique merchant identifier
        type: integer
      name:
        description: Legal name of the merchant
        type: string
      status:
        description: Current status ("active", "suspended", etc.)
        type: string
      updated_at:
        description: Timestamp when merchant was last updated
        type: string
      user_id:
        description: ID of the user who owns/administers this merchant
        type: integer
    type: object
  response.MerchantResponseMonthlyAmount:
    properties:
      month:
        description: Month in "YYYY-MM" format
        type: string
      total_amount:
        description: Total transaction amount for the month
        type: integer
    type: object
  response.MerchantResponseMonthlyPaymentMethod:
    properties:
      month:
        description: Month in "YYYY-MM" format
        type: string
      payment_method:
        description: Type of payment method
        type: string
      total_amount:
        description: Total amount processed by this method
        type: integer
    type: object
  response.MerchantResponseYearlyAmount:
    properties:
      total_amount:
        description: Total transaction amount for the year
        type: integer
      year:
        description: Year in "YYYY" format
        type: string
    type: object
  response.MerchantResponseYearlyPaymentMethod:
    properties:
      payment_method:
        description: Type of payment method
        type: string
      total_amount:
        description: Total amount processed by this method
        type: integer
      year:
        description: Year in "YYYY" format
        type: string
    type: object
  response.PaginationMeta:
    properties:
      current_page:
        description: Current page number (1-based index)
        type: integer
      page_size:
        description: Number of items per page
        type: integer
      total_pages:
        description: Total number of pages available
        type: integer
      total_records:
        description: Total number of items across all pages
        type: integer
    type: object
  response.RoleResponse:
    properties:
      created_at:
        description: Timestamp when role was created (RFC3339 format)
        type: string
      id:
        description: Unique role identifier
        type: integer
      name:
        description: Name of the role (e.g., "admin", "user")
        type: string
      updated_at:
        description: Timestamp when role was last updated
        type: string
    type: object
  response.RoleResponseDeleteAt:
    properties:
      created_at:
        description: Original creation timestamp
        type: string
      deleted_at:
        description: Deletion timestamp (nil if not deleted)
        type: string
      id:
        description: Unique role identifier
        type: integer
      name:
        description: Name of the role
        type: string
      updated_at:
        description: Last update timestamp
        type: string
    type: object
  response.SaldoMonthBalanceResponse:
    properties:
      month:
        description: Month in "YYYY-MM" format
        type: string
      total_balance:
        description: Balance amount for the month
        type: integer
    type: object
  response.SaldoMonthTotalBalanceResponse:
    properties:
      month:
        description: Month in "MM" format
        type: string
      total_balance:
        description: Aggregate balance for the month
        type: integer
      year:
        description: Year in "YYYY" format
        type: string
    type: object
  response.SaldoResponse:
    properties:
      card_number:
        description: Masked card number (e.g., "4242******4242")
        type: string
      created_at:
        description: Timestamp when record was created
        type: string
      id:
        description: Unique balance record identifier
        type: integer
      total_balance:
        description: Current balance amount (in smallest currency unit)
        type: integer
      updated_at:
        description: Timestamp when record was last updated
        type: string
      withdraw_amount:
        description: Last withdrawal amount (in smallest currency unit)
        type: integer
      withdraw_time:
        description: Timestamp of last withdrawal (RFC3339 format)
        type: string
    type: object
  response.SaldoYearBalanceResponse:
    properties:
      total_balance:
        description: Balance amount for the year
        type: integer
      year:
        description: Year in "YYYY" format
        type: string
    type: object
  response.SaldoYearTotalBalanceResponse:
    properties:
      total_balance:
        description: Aggregate balance for the year
        type: integer
      year:
        description: Year in "YYYY" format
        type: string
    type: object
  response.TokenResponse:
    properties:
      access_token:
        description: Short-lived JWT for API access
        type: string
      refresh_token:
        description: Long-lived token for obtaining new access tokens
        type: string
    type: object
  response.TopupMonthAmountResponse:
    properties:
      month:
        description: Month of the statistics
        type: string
      total_amount:
        description: Total amount processed
        type: integer
    type: object
  response.TopupMonthMethodResponse:
    properties:
      month:
        description: Month of the statistics
        type: string
      topup_method:
        description: Payment method used
        type: string
      total_amount:
        description: Total amount processed with this method
        type: integer
      total_topups:
        description: Number of top-ups using this method
        type: integer
    type: object
  response.TopupResponse:
    properties:
      card_number:
        description: Card number associated with the top-up
        type: string
      created_at:
        description: Timestamp when record was created
        type: string
      id:
        description: Unique identifier for the top-up
        type: integer
      topup_amount:
        description: Amount of the top-up
        type: integer
      topup_method:
        description: Payment method used for the top-up
        type: string
      topup_no:
        description: Unique top-up reference number
        type: string
      topup_time:
        description: Time when the top-up was processed
        type: string
      updated_at:
        description: Timestamp when record was last updated
        type: string
    type: object
  response.TopupResponseMonthStatusFailed:
    properties:
      month:
        description: Month of the statistics
        type: string
      total_amount:
        description: Total amount of failed top-ups
        type: integer
      total_failed:
        description: Count of failed top-ups
        type: integer
      year:
        description: Year of the statistics
        type: string
    type: object
  response.TopupResponseMonthStatusSuccess:
    properties:
      month:
        description: Month of the statistics
        type: string
      total_amount:
        description: Total amount of successful top-ups
        type: integer
      total_success:
        description: Count of successful top-ups
        type: integer
      year:
        description: Year of the statistics
        type: string
    type: object
  response.TopupResponseYearStatusFailed:
    properties:
      total_amount:
        description: Total amount of failed top-ups
        type: integer
      total_failed:
        description: Count of failed top-ups
        type: integer
      year:
        description: Year of the statistics
        type: string
    type: object
  response.TopupResponseYearStatusSuccess:
    properties:
      total_amount:
        description: Total amount of successful top-ups
        type: integer
      total_success:
        description: Count of successful top-ups
        type: integer
      year:
        description: Year of the statistics
        type: string
    type: object
  response.TopupYearlyAmountResponse:
    properties:
      total_amount:
        description: Total amount processed
        type: integer
      year:
        description: Year of the statistics
        type: string
    type: object
  response.TopupYearlyMethodResponse:
    properties:
      topup_method:
        description: Payment method used
        type: string
      total_amount:
        description: Total amount processed with this method
        type: integer
      total_topups:
        description: Number of top-ups using this method
        type: integer
      year:
        description: Year of the statistics
        type: string
    type: object
  response.TransactionMonthAmountResponse:
    properties:
      month:
        description: Month of the metrics
        type: string
      total_amount:
        description: Total amount processed
        type: integer
    type: object
  response.TransactionMonthMethodResponse:
    properties:
      month:
        description: Month of the metrics
        type: string
      payment_method:
        description: Payment method used
        type: string
      total_amount:
        description: Total amount processed
        type: integer
      total_transactions:
        description: Number of transactions
        type: integer
    type: object
  response.TransactionResponse:
    properties:
      amount:
        description: Transaction amount
        type: integer
      card_number:
        description: Card number used for the transaction
        type: string
      created_at:
        description: When the record was created
        type: string
      id:
        description: Unique transaction identifier
        type: integer
      merchant_id:
        description: ID of the merchant where transaction occurred
        type: integer
      payment_method:
        description: Payment method used (e.g., "credit", "debit")
        type: string
      transaction_no:
        description: Unique transaction reference number
        type: string
      transaction_time:
        description: Timestamp of the transaction
        type: string
      updated_at:
        description: When the record was last updated
        type: string
    type: object
  response.TransactionResponseMonthStatusFailed:
    properties:
      month:
        description: Month of the metrics
        type: string
      total_amount:
        description: Total amount of failed transactions
        type: integer
      total_failed:
        description: Count of failed transactions
        type: integer
      year:
        description: Year of the metrics
        type: string
    type: object
  response.TransactionResponseMonthStatusSuccess:
    properties:
      month:
        description: Month of the metrics
        type: string
      total_amount:
        description: Total amount of successful transactions
        type: integer
      total_success:
        description: Count of successful transactions
        type: integer
      year:
        description: Year of the metrics
        type: string
    type: object
  response.TransactionResponseYearStatusFailed:
    properties:
      total_amount:
        description: Total amount of failed transactions
        type: integer
      total_failed:
        description: Count of failed transactions
        type: integer
      year:
        description: Year of the metrics
        type: string
    type: object
  response.TransactionResponseYearStatusSuccess:
    properties:
      total_amount:
        description: Total amount of successful transactions
        type: integer
      total_success:
        description: Count of successful transactions
        type: integer
      year:
        description: Year of the metrics
        type: string
    type: object
  response.TransactionYearMethodResponse:
    properties:
      payment_method:
        description: Payment method used
        type: string
      total_amount:
        description: Total amount processed
        type: integer
      total_transactions:
        description: Number of transactions
        type: integer
      year:
        description: Year of the metrics
        type: string
    type: object
  response.TransactionYearlyAmountResponse:
    properties:
      total_amount:
        description: Total amount processed
        type: integer
      year:
        description: Year of the metrics
        type: string
    type: object
  response.TransferMonthAmountResponse:
    properties:
      month:
        description: Month of the metrics
        type: string
      total_amount:
        description: Total amount transferred
        type: integer
    type: object
  response.TransferResponse:
    properties:
      created_at:
        description: When the record was created
        type: string
      id:
        description: Unique transfer identifier
        type: integer
      transfer_amount:
        description: Amount transferred
        type: integer
      transfer_from:
        description: Source account number
        type: string
      transfer_no:
        description: Unique transfer reference number
        type: string
      transfer_time:
        description: Timestamp when transfer was executed
        type: string
      transfer_to:
        description: Destination account number
        type: string
      updated_at:
        description: When the record was last updated
        type: string
    type: object
  response.TransferResponseMonthStatusFailed:
    properties:
      month:
        description: Month of the metrics
        type: string
      total_amount:
        description: Total amount of failed transfers
        type: integer
      total_failed:
        description: Count of failed transfers
        type: integer
      year:
        description: Year of the metrics
        type: string
    type: object
  response.TransferResponseMonthStatusSuccess:
    properties:
      month:
        description: Month of the metrics
        type: string
      total_amount:
        description: Total amount successfully transferred
        type: integer
      total_success:
        description: Count of successful transfers
        type: integer
      year:
        description: Year of the metrics
        type: string
    type: object
  response.TransferResponseYearStatusFailed:
    properties:
      total_amount:
        description: Total amount of failed transfers
        type: integer
      total_failed:
        description: Count of failed transfers
        type: integer
      year:
        description: Year of the metrics
        type: string
    type: object
  response.TransferResponseYearStatusSuccess:
    properties:
      total_amount:
        description: Total amount successfully transferred
        type: integer
      total_success:
        description: Count of successful transfers
        type: integer
      year:
        description: Year of the metrics
        type: string
    type: object
  response.TransferYearAmountResponse:
    properties:
      total_amount:
        description: Total amount transferred
        type: integer
      year:
        description: Year of the metrics
        type: string
    type: object
  response.UserResponse:
    properties:
      created_at:
        description: Timestamp when the user account was created
        type: string
      email:
        description: User's email address (used for authentication)
        type: string
      firstname:
        description: User's first name
        type: string
      id:
        description: Unique user identifier
        type: integer
      is_verified:
        description: Whether the user's email has been verified
        type: boolean
      lastname:
        description: User's last name
        type: string
      updated_at:
        description: Timestamp when the user account was last updated
        type: string
    type: object
  response.WithdrawMonthlyAmountResponse:
    properties:
      month:
        description: Month of the metrics (MM format)
        type: string
      total_amount:
        description: Total amount withdrawn
        type: integer
    type: object
  response.WithdrawResponse:
    properties:
      card_number:
        description: Card number used for the withdrawal
        type: string
      created_at:
        description: When the withdrawal record was created
        type: string
      id:
        description: Unique withdrawal transaction identifier
        type: integer
      updated_at:
        description: When the withdrawal record was last updated
        type: string
      withdraw_amount:
        description: Amount withdrawn (in smallest currency unit)
        type: integer
      withdraw_no:
        description: Unique withdrawal reference number
        type: string
      withdraw_time:
        description: Timestamp when withdrawal was processed
        type: string
    type: object
  response.WithdrawResponseMonthStatusFailed:
    properties:
      month:
        description: Month of the metrics (MM format)
        type: string
      total_amount:
        description: Total amount of failed withdrawals
        type: integer
      total_failed:
        description: Count of failed withdrawals
        type: integer
      year:
        description: Year of the metrics (YYYY format)
        type: string
    type: object
  response.WithdrawResponseMonthStatusSuccess:
    properties:
      month:
        description: Month of the metrics (MM format)
        type: string
      total_amount:
        description: Total amount successfully withdrawn
        type: integer
      total_success:
        description: Count of successful withdrawals
        type: integer
      year:
        description: Year of the metrics (YYYY format)
        type: string
    type: object
  response.WithdrawResponseYearStatusSuccess:
    properties:
      total_amount:
        description: Total amount successfully withdrawn
        type: integer
      total_success:
        description: Count of successful withdrawals
        type: integer
      year:
        description: Year of the metrics (YYYY format)
        type: string
    type: object
  response.WithdrawYearlyAmountResponse:
    properties:
      total_amount:
        description: Total amount withdrawn
        type: integer
      year:
        description: Year of the metrics (YYYY format)
        type: string
    type: object
info:
  contact: {}
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user using the provided email and password.
      parameters:
      - description: User login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.ApiResponseLogin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Authenticate a user
      tags:
      - Auth
  /api/auth/me:
    get:
      description: Retrieves the current user's information using a valid access token
        from the Authorization header.
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.ApiResponseGetMe'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      - BearerToken: []
      summary: Get current user information
      tags:
      - Auth
  /api/auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Refreshes the access token using a valid refresh token.
      parameters:
      - description: Refresh token data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.ApiResponseRefreshToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Refresh access token
      tags:
      - Auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user with the provided details.
      parameters:
      - description: User registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/response.ApiResponseRegister'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Register a new user
      tags:
      - Auth
  /api/card:
    get:
      consumes:
      - application/json
      description: Retrieve all cards with pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of data per page
        in: query
        name: page_size
        type: integer
      - description: Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Card data
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationCard'
        "500":
          description: Failed to retrieve card data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve all cards
      tags:
      - Card-Query
  /api/card-stats-transaction/monthly-transaction-amount:
    get:
      description: Retrieve monthly transaction amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transaction amount data
      tags:
      - Card-Stats-Transaction
  /api/card-stats-transaction/monthly-transaction-amount-by-card:
    get:
      description: Retrieve monthly transaction amount data for a specific year and
        card number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transaction amount data by card number
      tags:
      - Card-Stats-Transaction
  /api/card-stats-transaction/yearly-transaction-amount:
    get:
      description: Retrieve yearly transaction amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transaction amount data
      tags:
      - Card-Stats-Transaction
  /api/card-stats-transaction/yearly-transaction-amount-by-card:
    get:
      description: Retrieve yearly transaction amount data for a specific year and
        card number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transaction amount data by card number
      tags:
      - Card-Stats-Transaction
  /api/card-stats-transfer/monthly-transfer-receiver-amount:
    get:
      description: Retrieve monthly transfer receiver amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer receiver amount data
      tags:
      - Card-Stats-Transfer
  /api/card-stats-transfer/monthly-transfer-receiver-amount-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the total amount received by a specific card number in
        a given year, broken down by month
      parameters:
      - description: Year for which the data is requested
        in: query
        name: year
        required: true
        type: integer
      - description: Card number for which the data is requested
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer receiver amount by card number
      tags:
      - Card-Stats-Transfer
  /api/card-stats-transfer/monthly-transfer-sender-amount:
    get:
      description: Retrieve monthly transfer sender amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer sender amount data
      tags:
      - Card-Stats-Transfer
  /api/card-stats-transfer/monthly-transfer-sender-amount-by-card:
    get:
      description: Retrieve monthly transfer sender amount data for a specific year
        and card number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer sender amount data by card number
      tags:
      - Card-Stats-Transfer
  /api/card-stats-transfer/yearly-transfer-receiver-amount:
    get:
      description: Retrieve yearly transfer receiver amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer receiver amount data
      tags:
      - Card-Stats-Transfer
  /api/card-stats-transfer/yearly-transfer-receiver-amount-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the total amount received by a specific card number in
        a given year
      parameters:
      - description: Year for which the data is requested
        in: query
        name: year
        required: true
        type: integer
      - description: Card number for which the data is requested
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer receiver amount by card number
      tags:
      - Card-Stats-Transfer
  /api/card-stats-transfer/yearly-transfer-sender-amount:
    get:
      description: Retrieve yearly transfer sender amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer sender amount data
      tags:
      - Card-Stats-Transfer
  /api/card-stats-transfer/yearly-transfer-sender-amount-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the total amount sent by a specific card number in a given
        year
      parameters:
      - description: Year for which the data is requested
        in: query
        name: year
        required: true
        type: integer
      - description: Card number for which the data is requested
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer sender amount by card number
      tags:
      - Card-Stats-Transfer
  /api/card-stats-withdraw/monthly-withdraw-amount:
    get:
      description: Retrieve monthly withdraw amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly withdraw amount data
      tags:
      - Card-Stats-Withdraw
  /api/card-stats-withdraw/monthly-withdraw-amount-by-card:
    get:
      description: Retrieve monthly withdraw amount data for a specific year and card
        number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly withdraw amount data by card number
      tags:
      - Card-Stats-Withdraw
  /api/card-stats-withdraw/yearly-withdraw-amount:
    get:
      description: Retrieve yearly withdraw amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly withdraw amount data
      tags:
      - Card-Stats-Withdraw
  /api/card-stats-withdraw/yearly-withdraw-amount-by-card:
    get:
      description: Retrieve yearly withdraw amount data for a specific year and card
        number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly withdraw amount data by card number
      tags:
      - Card-Stats-Withdraw
  /api/card/{card_number}:
    get:
      consumes:
      - application/json
      description: Retrieve a card by its card number
      parameters:
      - description: Card number
        in: path
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Card data
          schema:
            $ref: '#/definitions/response.ApiResponseCard'
        "400":
          description: Failed to fetch card record
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve card record
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve card by card number
      tags:
      - Card-Query
  /api/card/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a card by its ID
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Card data
          schema:
            $ref: '#/definitions/response.ApiResponseCard'
        "400":
          description: Invalid card ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve card record
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve card by ID
      tags:
      - Card-Query
  /api/card/active:
    get:
      consumes:
      - application/json
      description: Retrieve an active card associated with a Saldo ID
      produces:
      - application/json
      responses:
        "200":
          description: Card data
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationCardDeleteAt'
        "400":
          description: Invalid Saldo ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve card record
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve active card by Saldo ID
      tags:
      - Card-Query
  /api/card/create:
    post:
      consumes:
      - application/json
      description: Create a new card for a user
      parameters:
      - description: Create card request
        in: body
        name: CreateCardRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateCardRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created card
          schema:
            $ref: '#/definitions/response.ApiResponseCard'
        "400":
          description: Bad request or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create card
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new card
      tags:
      - Card-Command
  /api/card/dashboard:
    get:
      description: Retrieve dashboard card data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseDashboardCard'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get dashboard card data
      tags:
      - Card-Dashboard
  /api/card/dashboard/{cardNumber}:
    get:
      description: Retrieve dashboard card data for a specific card number
      parameters:
      - description: Card Number
        in: path
        name: cardNumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseDashboardCardNumber'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get dashboard card data by card number
      tags:
      - Card-Dashboard
  /api/card/monthly-balance:
    get:
      description: Retrieve monthly balance data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseMonthlyBalance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly balance data
      tags:
      - Card-Stats-Balance
  /api/card/monthly-balance-by-card:
    get:
      description: Retrieve monthly balance data for a specific year and card number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseMonthlyBalance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly balance data by card number
      tags:
      - Card-Stats-Balance
  /api/card/monthly-topup-amount:
    get:
      description: Retrieve monthly topup amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly topup amount data
      tags:
      - Card-Stats-Topup
  /api/card/monthly-topup-amount-by-card:
    get:
      description: Retrieve monthly topup amount data for a specific year and card
        number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseMonthlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly topup amount data by card number
      tags:
      - Card-Stats-Topup
  /api/card/permanent/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a card by its ID permanently
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Deleted card
          schema:
            $ref: '#/definitions/response.ApiResponseCardDelete'
        "400":
          description: Bad request or invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to delete card
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Delete a card permanently
      tags:
      - Card-Command
  /api/card/permanent/all:
    post:
      consumes:
      - application/json
      description: Permanently delete all card records from the database.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted all card records permanently
          schema:
            $ref: '#/definitions/response.ApiResponseCardAll'
        "500":
          description: Failed to permanently delete all card records
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer.: []
      summary: Permanently delete all card records
      tags:
      - Card-Command
  /api/card/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a card by its ID
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Restored card
          schema:
            $ref: '#/definitions/response.ApiResponseCard'
        "400":
          description: Bad request or invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore card
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a card
      tags:
      - Card-Command
  /api/card/restore/all:
    post:
      consumes:
      - application/json
      description: Restore all card records that were previously deleted.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored all card records
          schema:
            $ref: '#/definitions/response.ApiResponseCardAll'
        "500":
          description: Failed to restore all card records
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore all card records
      tags:
      - Card-Command
  /api/card/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed cards
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: page_size
        type: integer
      - description: Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Card data
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationCardDeleteAt'
        "500":
          description: Failed to retrieve card record
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed cards
      tags:
      - Card-Query
  /api/card/trashed/{id}:
    post:
      consumes:
      - application/json
      description: Trashed a card by its ID
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Trashed card
          schema:
            $ref: '#/definitions/response.ApiResponseCard'
        "400":
          description: Bad request or invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to trashed card
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Trashed a card
      tags:
      - Card-Command
  /api/card/update/{id}:
    post:
      consumes:
      - application/json
      description: Update a card for a user
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update card request
        in: body
        name: UpdateCardRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateCardRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated card
          schema:
            $ref: '#/definitions/response.ApiResponseCard'
        "400":
          description: Bad request or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update card
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update a card
      tags:
      - Card-Command
  /api/card/user:
    get:
      consumes:
      - application/json
      description: Retrieve a list of cards associated with a user by their ID
      produces:
      - application/json
      responses:
        "200":
          description: Card data
          schema:
            $ref: '#/definitions/response.ApiResponseCard'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve card record
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve cards by user ID
      tags:
      - Card-Query
  /api/card/yearly-balance:
    get:
      description: Retrieve yearly balance data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseYearlyBalance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly balance data
      tags:
      - Card-Stats-Balance
  /api/card/yearly-balance-by-card:
    get:
      description: Retrieve yearly balance data for a specific year and card number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseYearlyBalance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly balance data by card number
      tags:
      - Card-Stats-Balance
  /api/card/yearly-topup-amount-by-card:
    get:
      description: Retrieve yearly topup amount data for a specific year and card
        number
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly topup amount data by card number
      tags:
      - Card-Stats-Topup
  /api/merchant-command/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a merchant by its ID permanently
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Deleted merchant
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantDelete'
        "400":
          description: Bad request or invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to delete merchant
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Delete a merchant permanently
      tags:
      - Merchant
  /api/merchant-command/create:
    post:
      consumes:
      - application/json
      description: Create a new merchant with the given name and user ID
      parameters:
      - description: Create merchant request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.CreateMerchantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created merchant
          schema:
            $ref: '#/definitions/response.ApiResponseMerchant'
        "400":
          description: Bad request or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create merchant
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new merchant
      tags:
      - Merchant
  /api/merchant-command/permanent/all:
    post:
      consumes:
      - application/json
      description: Permanently delete all merchant records from the database.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted all merchant records permanently
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantAll'
        "500":
          description: Failed to permanently delete all merchant records
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete all merchant records
      tags:
      - Merchant
  /api/merchant-command/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a merchant by its ID
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Restored merchant
          schema:
            $ref: '#/definitions/response.ApiResponseMerchant'
        "400":
          description: Bad request or invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore merchant
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a merchant
      tags:
      - Merchant
  /api/merchant-command/restore/all:
    post:
      consumes:
      - application/json
      description: Restore all merchant records that were previously deleted.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored all merchant records
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantAll'
        "500":
          description: Failed to restore all merchant records
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore all merchant records
      tags:
      - Merchant
  /api/merchant-command/trashed/{id}:
    post:
      consumes:
      - application/json
      description: Trashed a merchant by its ID
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Trashed merchant
          schema:
            $ref: '#/definitions/response.ApiResponseMerchant'
        "400":
          description: Bad request or invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to trashed merchant
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Trashed a merchant
      tags:
      - Merchant
  /api/merchant-command/update-status/{id}:
    post:
      consumes:
      - application/json
      description: Update the status of a merchant with the given ID
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update merchant status request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateMerchantStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated merchant status
          schema:
            $ref: '#/definitions/response.ApiResponseMerchant'
        "400":
          description: Bad request or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update merchant status
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update merchant status
      tags:
      - Merchant
  /api/merchant-command/update/{id}:
    post:
      consumes:
      - application/json
      description: Update a merchant with the given ID
      parameters:
      - description: Update merchant request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateMerchantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated merchant
          schema:
            $ref: '#/definitions/response.ApiResponseMerchant'
        "400":
          description: Bad request or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update merchant
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update a merchant
      tags:
      - Merchant
  /api/merchant-document-command/create:
    post:
      consumes:
      - application/json
      description: Create a new document for a merchant
      parameters:
      - description: Create merchant document request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.CreateMerchantDocumentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created document
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantDocument'
        "400":
          description: Bad request or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create document
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new merchant document
      tags:
      - Merchant Document Command
  /api/merchant-document-command/permanent/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a merchant document by its ID
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Deleted document
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantDocumentDelete'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to delete document
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Delete a merchant document
      tags:
      - Merchant Document Command
  /api/merchant-document-command/permanent/all:
    post:
      consumes:
      - application/json
      description: Permanently delete all merchant documents from the database
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted all documents permanently
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantDocumentAll'
        "500":
          description: Failed to permanently delete all documents
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete all merchant documents
      tags:
      - Merchant Document Command
  /api/merchant-document-command/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a merchant document by its ID
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Restored document
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantDocument'
        "400":
          description: Bad request or invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore document
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a merchant document
      tags:
      - Merchant Document Command
  /api/merchant-document-command/restore/all:
    post:
      consumes:
      - application/json
      description: Restore all merchant documents that were previously deleted
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored all documents
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantDocumentAll'
        "500":
          description: Failed to restore all documents
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore all merchant documents
      tags:
      - Merchant Document Command
  /api/merchant-document-command/trashed/{id}:
    post:
      consumes:
      - application/json
      description: Trashed a merchant document by its ID
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Trashed document
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantDocument'
        "400":
          description: Bad request or invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to trashed document
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Trashed a merchant document
      tags:
      - Merchant Document Command
  /api/merchant-document-command/update/{id}:
    post:
      consumes:
      - application/json
      description: Update a merchant document with the given ID
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update merchant document request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateMerchantDocumentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated document
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantDocument'
        "400":
          description: Bad request or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update document
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update a merchant document
      tags:
      - Merchant Document Command
  /api/merchant-document-query:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all merchant documents
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of merchant documents
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationMerchantDocument'
        "500":
          description: Failed to retrieve merchant document data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all merchant documents
      tags:
      - Merchant Document Query
  /api/merchant-document-query/{id}:
    get:
      consumes:
      - application/json
      description: Get a merchant document by its ID
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Document details
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantDocument'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to get document
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get merchant document by ID
      tags:
      - Merchant Document Query
  /api/merchant-document-query/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all active merchant documents
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of active merchant documents
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationMerchantDocument'
        "500":
          description: Failed to retrieve active merchant documents
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all active merchant documents
      tags:
      - Merchant Document Query
  /api/merchant-document-query/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all trashed merchant documents
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed merchant documents
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationMerchantDocumentDeleteAt'
        "500":
          description: Failed to retrieve trashed merchant documents
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all trashed merchant documents
      tags:
      - Merchant Document Query
  /api/merchant-query:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all merchants
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of merchants
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationMerchant'
        "500":
          description: Failed to retrieve merchant data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all merchants
      tags:
      - Merchant Query
  /api/merchant-query/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a merchant by its ID.
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Merchant data
          schema:
            $ref: '#/definitions/response.ApiResponseMerchant'
        "400":
          description: Invalid merchant ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve merchant data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a merchant by ID
      tags:
      - Merchant Query
  /api/merchant-query/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of active merchants
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of active merchants
          schema:
            $ref: '#/definitions/response.ApiResponsesMerchant'
        "500":
          description: Failed to retrieve merchant data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find active merchants
      tags:
      - Merchant Query
  /api/merchant-query/api-key:
    get:
      consumes:
      - application/json
      description: Retrieve a merchant by its API key
      parameters:
      - description: API key
        in: query
        name: api_key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Merchant data
          schema:
            $ref: '#/definitions/response.ApiResponseMerchant'
        "500":
          description: Failed to retrieve merchant data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a merchant by API key
      tags:
      - Merchant Query
  /api/merchant-query/merchant-user:
    get:
      consumes:
      - application/json
      description: Retrieve a merchant by its user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Merchant data
          schema:
            $ref: '#/definitions/response.ApiResponsesMerchant'
        "400":
          description: Invalid merchant ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve merchant data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a merchant by user ID
      tags:
      - Merchant Query
  /api/merchant-query/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed merchants
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed merchants
          schema:
            $ref: '#/definitions/response.ApiResponsesMerchant'
        "500":
          description: Failed to retrieve merchant data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find trashed merchants
      tags:
      - Merchant Query
  /api/merchant-stats-amount/monthly-amount:
    get:
      consumes:
      - application/json
      description: Retrieve monthly transaction amounts for a merchant by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction amounts
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantMonthlyAmount'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly transaction amounts for a merchant
      tags:
      - Merchant
  /api/merchant-stats-amount/monthly-amount-by-apikey:
    get:
      consumes:
      - application/json
      description: Retrieve monthly transaction amounts for a specific merchant by
        year.
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction amounts
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantMonthlyAmount'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly transaction amounts for a specific merchant
      tags:
      - Merchant
  /api/merchant-stats-amount/monthly-amount-by-merchant:
    get:
      consumes:
      - application/json
      description: Retrieve monthly transaction amounts for a specific merchant by
        year.
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction amounts
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantMonthlyAmount'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly transaction amounts for a specific merchant
      tags:
      - Merchant
  /api/merchant-stats-amount/monthly-payment-methods:
    get:
      consumes:
      - application/json
      description: Retrieve monthly payment methods for a merchant by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly payment methods
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantMonthlyPaymentMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly payment methods
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly payment methods for a merchant
      tags:
      - Merchant
  /api/merchant-stats-amount/monthly-payment-methods-by-apikey:
    get:
      consumes:
      - application/json
      description: Retrieve monthly payment methods for a specific merchant by year.
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly payment methods
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantMonthlyPaymentMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly payment methods
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly payment methods for a specific merchant
      tags:
      - Merchant
  /api/merchant-stats-amount/monthly-payment-methods-by-merchant:
    get:
      consumes:
      - application/json
      description: Retrieve monthly payment methods for a specific merchant by year.
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly payment methods
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantMonthlyPaymentMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly payment methods
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly payment methods for a specific merchant
      tags:
      - Merchant
  /api/merchant-stats-amount/yearly-amount:
    get:
      consumes:
      - application/json
      description: Retrieve yearly transaction amounts for a merchant by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction amounts
          schema:
            $ref: '#/definitions/response.ApiResponseYearlyAmount'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly transaction amounts for a merchant
      tags:
      - Merchant
  /api/merchant-stats-amount/yearly-amount-by-apikey:
    get:
      consumes:
      - application/json
      description: Retrieve yearly transaction amounts for a specific merchant by
        year.
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction amounts
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantYearlyAmount'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly transaction amounts for a specific merchant
      tags:
      - Merchant
  /api/merchant-stats-amount/yearly-amount-by-merchant:
    get:
      consumes:
      - application/json
      description: Retrieve yearly transaction amounts for a specific merchant by
        year.
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction amounts
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantYearlyAmount'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly transaction amounts for a specific merchant
      tags:
      - Merchant
  /api/merchant-stats-amount/yearly-payment-methods:
    get:
      consumes:
      - application/json
      description: Retrieve yearly payment methods for a merchant by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly payment methods
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantYearlyPaymentMethod'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly payment methods
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly payment methods for a merchant
      tags:
      - Merchant
  /api/merchant-stats-amount/yearly-payment-methods-by-apikey:
    get:
      consumes:
      - application/json
      description: Retrieve yearly payment methods for a specific merchant by year.
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly payment methods
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantYearlyPaymentMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly payment methods
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly payment methods for a specific merchant
      tags:
      - Merchant
  /api/merchant-stats-amount/yearly-payment-methods-by-merchant:
    get:
      consumes:
      - application/json
      description: Retrieve yearly payment methods for a specific merchant by year.
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly payment methods
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantYearlyPaymentMethod'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly payment methods
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly payment methods for a specific merchant
      tags:
      - Merchant
  /api/merchant-stats-totalamount/monthly-total-amount:
    get:
      consumes:
      - application/json
      description: Retrieve monthly transaction amounts for a merchant by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction amounts
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantMonthlyAmount'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly transaction amounts for a merchant
      tags:
      - Merchant
  /api/merchant-stats-totalamount/monthly-totalamount-by-apikey:
    get:
      consumes:
      - application/json
      description: Retrieve monthly transaction amounts for a specific merchant by
        year.
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction amounts
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantMonthlyAmount'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly transaction amounts for a specific merchant
      tags:
      - Merchant
  /api/merchant-stats-totalamount/monthly-totalamount-by-merchant:
    get:
      consumes:
      - application/json
      description: Retrieve monthly transaction amounts for a specific merchant by
        year.
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction amounts
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantMonthlyAmount'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find monthly transaction amounts for a specific merchant
      tags:
      - Merchant
  /api/merchant-stats-totalamount/yearly-total-amount:
    get:
      consumes:
      - application/json
      description: Retrieve yearly transaction amounts for a merchant by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction amounts
          schema:
            $ref: '#/definitions/response.ApiResponseYearlyAmount'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly transaction amounts for a merchant
      tags:
      - Merchant
  /api/merchant-stats-totalamount/yearly-totalamount-by-apikey:
    get:
      consumes:
      - application/json
      description: Retrieve yearly transaction amounts for a specific merchant by
        year.
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction amounts
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantYearlyAmount'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly transaction amounts for a specific merchant
      tags:
      - Merchant
  /api/merchant-stats-totalamount/yearly-totalamount-by-merchant:
    get:
      consumes:
      - application/json
      description: Retrieve yearly transaction amounts for a specific merchant by
        year.
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction amounts
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantYearlyAmount'
        "400":
          description: Invalid merchant ID or year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find yearly transaction amounts for a specific merchant
      tags:
      - Merchant
  /api/merchant-transactions/:merchant_id:
    get:
      consumes:
      - application/json
      description: Retrieve a list of transactions for a specific merchant
      parameters:
      - description: Merchant ID
        in: path
        name: merchant_id
        required: true
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of transactions
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationTransaction'
        "500":
          description: Failed to retrieve transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all transactions by merchant ID
      tags:
      - Merchant
  /api/merchant-transactions/api-key/:api_key:
    get:
      consumes:
      - application/json
      description: Retrieve a list of transactions for a specific merchant
      parameters:
      - description: Api key
        in: path
        name: api_key
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of transactions
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationTransaction'
        "500":
          description: Failed to retrieve transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all transactions by api_key
      tags:
      - Merchant
  /api/merchants-documents/update-status/{id}:
    post:
      consumes:
      - application/json
      description: Update the status of a merchant document
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update status request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateMerchantDocumentStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated document
          schema:
            $ref: '#/definitions/response.ApiResponseMerchantDocument'
        "400":
          description: Bad request or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update document status
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update merchant document status
      tags:
      - Merchant Document Command
  /api/merchants/transaction:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all transactions
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of transactions
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationTransaction'
        "500":
          description: Failed to retrieve transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all transactions
      tags:
      - Merchant
  /api/role:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of roles with optional search and pagination
        parameters.
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: page_size
        type: integer
      - description: Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of roles
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationRole'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to fetch roles
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get all roles
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: Create a new role with the provided details.
      parameters:
      - description: Role data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created role data
          schema:
            $ref: '#/definitions/response.ApiResponseRole'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create role
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new role
      tags:
      - Role
  /api/role/{id}:
    delete:
      consumes:
      - application/json
      description: Soft-delete a role by its ID.
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Soft-deleted role data
          schema:
            $ref: '#/definitions/response.ApiResponseRole'
        "400":
          description: Invalid role ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to soft-delete role
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Soft-delete a role
      tags:
      - Role
    get:
      consumes:
      - application/json
      description: Retrieve a role by its ID.
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Role data
          schema:
            $ref: '#/definitions/response.ApiResponseRole'
        "400":
          description: Invalid role ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to fetch role
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get a role by ID
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: Update an existing role with the provided details.
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Role data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated role data
          schema:
            $ref: '#/definitions/response.ApiResponseRole'
        "400":
          description: Invalid role ID or request body
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update role
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update a role
      tags:
      - Role
  /api/role/active:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of active roles with optional search
        and pagination parameters.
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: page_size
        type: integer
      - description: Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of active roles
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationRoleDeleteAt'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to fetch active roles
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get active roles
      tags:
      - Role
  /api/role/permanent/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a role by its ID.
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Permanently deleted role data
          schema:
            $ref: '#/definitions/response.ApiResponseRole'
        "400":
          description: Invalid role ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to delete role permanently
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a role
      tags:
      - Role
  /api/role/permanent/all:
    post:
      consumes:
      - application/json
      description: Permanently delete all roles.
      produces:
      - application/json
      responses:
        "200":
          description: Permanently deleted roles data
          schema:
            $ref: '#/definitions/response.ApiResponseRoleAll'
        "500":
          description: Failed to delete all roles permanently
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete all roles
      tags:
      - Role
  /api/role/restore/{id}:
    put:
      consumes:
      - application/json
      description: Restore a soft-deleted role by its ID.
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Restored role data
          schema:
            $ref: '#/definitions/response.ApiResponseRole'
        "400":
          description: Invalid role ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore role
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a soft-deleted role
      tags:
      - Role
  /api/role/restore/all:
    post:
      consumes:
      - application/json
      description: Restore all soft-deleted roles.
      produces:
      - application/json
      responses:
        "200":
          description: Restored roles data
          schema:
            $ref: '#/definitions/response.ApiResponseRoleAll'
        "500":
          description: Failed to restore all roles
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore all soft-deleted roles
      tags:
      - Role
  /api/role/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of trashed roles with optional search
        and pagination parameters.
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: page_size
        type: integer
      - description: Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed roles
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationRoleDeleteAt'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to fetch trashed roles
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get trashed roles
      tags:
      - Role
  /api/role/user/{user_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a role by the associated user ID.
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Role data
          schema:
            $ref: '#/definitions/response.ApiResponseRole'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to fetch role by user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get role by user ID
      tags:
      - Role
  /api/saldo-command/create:
    post:
      consumes:
      - application/json
      description: Create a new saldo record with the provided card number and total
        balance.
      parameters:
      - description: Create Saldo Request
        in: body
        name: CreateSaldoRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateSaldoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created saldo record
          schema:
            $ref: '#/definitions/response.ApiResponseSaldo'
        "400":
          description: 'Bad Request: Invalid request body or validation error'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create saldo
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new saldo
      tags:
      - Saldo-Command
  /api/saldo-command/permanent/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently delete an existing saldo record by its ID.
      parameters:
      - description: Saldo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted saldo record
          schema:
            $ref: '#/definitions/response.ApiResponseSaldoDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to delete saldo
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a saldo
      tags:
      - Saldo-Command
  /api/saldo-command/permanent/all:
    post:
      consumes:
      - application/json
      description: Permanently delete all saldo records from the database.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted all saldo records permanently
          schema:
            $ref: '#/definitions/response.ApiResponseSaldoAll'
        "500":
          description: Failed to permanently delete all saldo records
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete all saldo records
      tags:
      - Saldo-Command
  /api/saldo-command/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore an existing saldo record from the trash by its ID.
      parameters:
      - description: Saldo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored saldo record
          schema:
            $ref: '#/definitions/response.ApiResponseSaldo'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore saldo
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed saldo
      tags:
      - Saldo-Command
  /api/saldo-command/restore/all:
    post:
      consumes:
      - application/json
      description: Restore all saldo records that were previously deleted.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored all saldo records
          schema:
            $ref: '#/definitions/response.ApiResponseSaldoAll'
        "500":
          description: Failed to restore all saldo records
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore all saldo records
      tags:
      - Saldo-Command
  /api/saldo-command/trashed/{id}:
    post:
      consumes:
      - application/json
      description: Soft delete an existing saldo record by its ID.
      parameters:
      - description: Saldo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully trashed saldo record
          schema:
            $ref: '#/definitions/response.ApiResponseSaldo'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to trashed saldo
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Soft delete a saldo
      tags:
      - Saldo-Command
  /api/saldo-command/update/{id}:
    post:
      consumes:
      - application/json
      description: Update an existing saldo record with the provided card number and
        total balance.
      parameters:
      - description: Saldo ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Saldo Request
        in: body
        name: UpdateSaldoRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateSaldoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated saldo record
          schema:
            $ref: '#/definitions/response.ApiResponseSaldo'
        "400":
          description: 'Bad Request: Invalid request body or validation error'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update saldo
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update an existing saldo
      tags:
      - Saldo-Command
  /api/saldo-query:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all saldo data with pagination and search
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of saldo data
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationSaldo'
        "500":
          description: Failed to retrieve saldo data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all saldo data
      tags:
      - Saldo-Query
  /api/saldo-query/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a saldo by its ID
      parameters:
      - description: Saldo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Saldo data
          schema:
            $ref: '#/definitions/response.ApiResponseSaldo'
        "400":
          description: Invalid saldo ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve saldo data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a saldo by ID
      tags:
      - Saldo-Query
  /api/saldo-query/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all active saldo data
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of saldo data
          schema:
            $ref: '#/definitions/response.ApiResponsesSaldo'
        "500":
          description: Failed to retrieve saldo data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve all active saldo data
      tags:
      - Saldo-Query
  /api/saldo-query/card_number/{card_number}:
    get:
      consumes:
      - application/json
      description: Retrieve a saldo by its card number
      parameters:
      - description: Card number
        in: path
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Saldo data
          schema:
            $ref: '#/definitions/response.ApiResponseSaldo'
        "500":
          description: Failed to retrieve saldo data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a saldo by card number
      tags:
      - Saldo-Query
  /api/saldo-query/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all trashed saldo data
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed saldo data
          schema:
            $ref: '#/definitions/response.ApiResponsesSaldo'
        "500":
          description: Failed to retrieve saldo data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed saldo data
      tags:
      - Saldo-Query
  /api/saldo-stats-balance/monthly-balances:
    get:
      consumes:
      - application/json
      description: Retrieve monthly saldo balances for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly saldo balances
          schema:
            $ref: '#/definitions/response.ApiResponseMonthSaldoBalances'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly saldo balances
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly saldo balances
      tags:
      - Saldo-Stats-Balance
  /api/saldo-stats-balance/yearly-balances:
    get:
      consumes:
      - application/json
      description: Retrieve yearly saldo balances for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly saldo balances
          schema:
            $ref: '#/definitions/response.ApiResponseYearSaldoBalances'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly saldo balances
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly saldo balances
      tags:
      - Saldo-Stats-Balance
  /api/saldo-stats-total-balance/monthly-total-balance:
    get:
      consumes:
      - application/json
      description: Retrieve the total saldo balance for a specific month and year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly total saldo balance
          schema:
            $ref: '#/definitions/response.ApiResponseMonthTotalSaldo'
        "400":
          description: Invalid year or month parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly total saldo balance
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly total saldo balance
      tags:
      - Saldo-Stats-Total-Balance
  /api/saldo-stats-total-balance/yearly-total-balance:
    get:
      consumes:
      - application/json
      description: Retrieve the total saldo balance for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly total saldo balance
          schema:
            $ref: '#/definitions/response.ApiResponseYearTotalSaldo'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly total saldo balance
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly total saldo balance
      tags:
      - Saldo-Stats-Total-Balance
  /api/topup-command/create:
    post:
      consumes:
      - application/json
      description: Create a new topup record
      parameters:
      - description: Create topup request
        in: body
        name: CreateTopupRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateTopupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created topup data
          schema:
            $ref: '#/definitions/response.ApiResponseTopup'
        "400":
          description: 'Bad Request: '
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to create topup: '
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create topup
      tags:
      - Topup Command
  /api/topup-command/permanent/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a topup record by its ID.
      parameters:
      - description: Topup ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted topup record permanently
          schema:
            $ref: '#/definitions/response.ApiResponseTopupDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete topup:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a topup
      tags:
      - Topup Command
  /api/topup-command/permanent/all:
    post:
      consumes:
      - application/json
      description: Permanently delete all topup records from the database.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted all topup records permanently
          schema:
            $ref: '#/definitions/response.ApiResponseTopupAll'
        "500":
          description: Failed to permanently delete all topup records
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete all topup records
      tags:
      - Topup Command
  /api/topup-command/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a trashed topup record by its ID.
      parameters:
      - description: Topup ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored topup record
          schema:
            $ref: '#/definitions/response.ApiResponseTopup'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to restore topup:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed topup
      tags:
      - Topup Command
  /api/topup-command/restore/all:
    post:
      consumes:
      - application/json
      description: Restore all topup records that were previously deleted.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored all topup records
          schema:
            $ref: '#/definitions/response.ApiResponseTopupAll'
        "500":
          description: Failed to restore all topup records
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore all topup records
      tags:
      - Topup Command
  /api/topup-command/trash/{id}:
    post:
      consumes:
      - application/json
      description: Trash a topup record by its ID.
      parameters:
      - description: Topup ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully trashed topup record
          schema:
            $ref: '#/definitions/response.ApiResponseTopup'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to trash topup:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Trash a topup
      tags:
      - Topup Command
  /api/topup-command/update/{id}:
    post:
      consumes:
      - application/json
      description: Update an existing topup record with the provided details
      parameters:
      - description: Topup ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update topup request
        in: body
        name: UpdateTopupRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateTopupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated topup data
          schema:
            $ref: '#/definitions/response.ApiResponseTopup'
        "400":
          description: 'Bad Request: Invalid input data'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to update topup: '
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update topup
      tags:
      - Topup Command
  /api/topup-query:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all topup data with pagination and search
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of topup data
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationTopup'
        "500":
          description: Failed to retrieve topup data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve a list of all topup data
      tags:
      - Topup Query
  /api/topup-query/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a topup record using its ID
      parameters:
      - description: Topup ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Topup data
          schema:
            $ref: '#/definitions/response.ApiResponseTopup'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve topup data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a topup by ID
      tags:
      - Topup Query
  /api/topup-query/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of active topup records
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Active topup data
          schema:
            $ref: '#/definitions/response.ApiResponsesTopup'
        "500":
          description: Failed to retrieve topup data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find active topups
      tags:
      - Topup Query
  /api/topup-query/card-number/{card_number}:
    get:
      consumes:
      - application/json
      description: Retrieve a list of transactions for a specific card number
      parameters:
      - description: Card Number
        in: path
        name: card_number
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of topups
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationTopup'
        "500":
          description: Failed to retrieve topups data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all topup by card number
      tags:
      - Transaction
  /api/topup-query/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed topup records
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed topup data
          schema:
            $ref: '#/definitions/response.ApiResponsesTopup'
        "500":
          description: Failed to retrieve topup data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed topups
      tags:
      - Topup Query
  /api/topup-stats-amount/monthly-amounts-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly top-up amounts for a specific card number
        and year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly top-up amounts by card number
          schema:
            $ref: '#/definitions/response.ApiResponseTopupMonthAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly top-up amounts by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly top-up amounts by card number
      tags:
      - Topup Amount
  /api/topup-stats-amount/yearly-amounts:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly top-up amounts for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly top-up amounts
          schema:
            $ref: '#/definitions/response.ApiResponseTopupYearAmount'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly top-up amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly top-up amounts
      tags:
      - Topup Amount
  /api/topup-stats-amount/yearly-amounts-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly top-up amounts for a specific card number and
        year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly top-up amounts by card number
          schema:
            $ref: '#/definitions/response.ApiResponseTopupYearAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly top-up amounts by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly top-up amounts by card number
      tags:
      - Topup Amount
  /api/topup-stats-method/monthly-methods:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly top-up methods for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly top-up methods
          schema:
            $ref: '#/definitions/response.ApiResponseTopupMonthMethod'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly top-up methods
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly top-up methods
      tags:
      - Topup Method
  /api/topup-stats-method/monthly-methods-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly top-up methods for a specific card number
        and year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly top-up methods by card number
          schema:
            $ref: '#/definitions/response.ApiResponseTopupMonthMethod'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly top-up methods by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly top-up methods by card number
      tags:
      - Topup Method
  /api/topup-stats-method/yearly-methods:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly top-up methods for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly top-up methods
          schema:
            $ref: '#/definitions/response.ApiResponseTopupYearMethod'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly top-up methods
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly top-up methods
      tags:
      - Topup Method
  /api/topup-stats-method/yearly-methods-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly top-up methods for a specific card number and
        year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly top-up methods by card number
          schema:
            $ref: '#/definitions/response.ApiResponseTopupYearMethod'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly top-up methods by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly top-up methods by card number
      tags:
      - Topup Method
  /api/topup-stats-status/monthly-failed:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly top-up status for failed transactions by year
        and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly top-up status for failed transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTopupMonthStatusFailed'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly top-up status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly top-up status for failed transactions
      tags:
      - Topup Stats Status
  /api/topup-stats-status/monthly-failed-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly top-up status for failed transactions by year
        and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Monthly top-up status for failed transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTopupMonthStatusFailed'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly top-up status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly top-up status for failed transactions
      tags:
      - Topup Stats Status
  /api/topup-stats-status/monthly-success:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly top-up status for successful transactions
        by year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly top-up status for successful transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTopupMonthStatusSuccess'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly top-up status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly top-up status for successful transactions
      tags:
      - Topup Stats Status
  /api/topup-stats-status/monthly-success-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly top-up status for successful transactions
        by year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Monthly top-up status for successful transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTopupMonthStatusSuccess'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly top-up status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly top-up status for successful transactions
      tags:
      - Topup Stats Status
  /api/topup-stats-status/yearly-failed:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly top-up status for failed transactions by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly top-up status for failed transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTopupYearStatusFailed'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly top-up status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly top-up status for failed transactions
      tags:
      - Topup Stats Status
  /api/topup-stats-status/yearly-failed-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly top-up status for failed transactions by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Yearly top-up status for failed transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTopupYearStatusFailed'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly top-up status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly top-up status for failed transactions
      tags:
      - Topup Stats Status
  /api/topup-stats-status/yearly-success:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly top-up status for successful transactions by
        year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly top-up status for successful transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTopupYearStatusSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly top-up status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly top-up status for successful transactions
      tags:
      - Topup Stats Status
  /api/topup-stats-status/yearly-success-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly top-up status for successful transactions by
        year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Yearly top-up status for successful transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTopupYearStatusSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly top-up status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly top-up status for successful transactions
      tags:
      - Topup Stats Status
  /api/topup/monthly-amounts:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly top-up amounts for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly top-up amounts
          schema:
            $ref: '#/definitions/response.ApiResponseTopupMonthAmount'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly top-up amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly top-up amounts
      tags:
      - Topup Amount
  /api/topup/yearly-topup-amount:
    get:
      description: Retrieve yearly topup amount data for a specific year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseYearlyAmount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly topup amount data
      tags:
      - Card-Stats-Topup
  /api/transaction-command/create:
    post:
      consumes:
      - application/json
      description: Create a new transaction record with the provided details.
      parameters:
      - description: Create Transaction Request
        in: body
        name: CreateTransactionRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateTransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created transaction record
          schema:
            $ref: '#/definitions/response.ApiResponseTransaction'
        "400":
          description: 'Bad Request: Invalid request body or validation error'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create transaction
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new transaction
      tags:
      - Transaction Command
  /api/transaction-command/delete/all:
    post:
      consumes:
      - application/json
      description: Permanently delete a transaction all.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted transaction record
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionAll'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete transaction:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a transaction
      tags:
      - Transaction Command
  /api/transaction-command/permanent/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a transaction record by its ID.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted transaction record
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete transaction:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a transaction
      tags:
      - Transaction Command
  /api/transaction-command/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a trashed transaction record by its ID.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored transaction record
          schema:
            $ref: '#/definitions/response.ApiResponseTransaction'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to restore transaction:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed transaction
      tags:
      - Transaction Command
  /api/transaction-command/restore/all:
    post:
      consumes:
      - application/json
      description: Restore a trashed transaction all.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored transaction record
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionAll'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to restore transaction:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed transaction
      tags:
      - Transaction Command
  /api/transaction-command/trashed/{id}:
    post:
      consumes:
      - application/json
      description: Trash a transaction record by its ID.
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully trashed transaction record
          schema:
            $ref: '#/definitions/response.ApiResponseTransaction'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to trashed transaction
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Trash a transaction
      tags:
      - Transaction Command
  /api/transaction-command/update:
    post:
      consumes:
      - application/json
      description: Update an existing transaction record using its ID
      parameters:
      - description: Transaction data
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateTransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated transaction data
          schema:
            $ref: '#/definitions/response.ApiResponseTransaction'
        "400":
          description: 'Bad Request: Invalid request body or validation error'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update transaction
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update a transaction
      tags:
      - Transaction Command
  /api/transaction-query:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all transactions
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of transactions
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationTransaction'
        "500":
          description: Failed to retrieve transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all
      tags:
      - Transaction Query
  /api/transaction-query/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a transaction record using its ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transaction data
          schema:
            $ref: '#/definitions/response.ApiResponseTransaction'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a transaction by ID
      tags:
      - Transaction Query
  /api/transaction-query/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of active transactions
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: page_size
        type: integer
      - description: Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of active transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransactions'
        "500":
          description: Failed to retrieve transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find active transactions
      tags:
      - Transaction Query
  /api/transaction-query/card-number/{card_number}:
    get:
      consumes:
      - application/json
      description: Retrieve a list of transactions for a specific card number
      parameters:
      - description: Card Number
        in: path
        name: card_number
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of transactions
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationTransaction'
        "500":
          description: Failed to retrieve transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all transactions by card number
      tags:
      - Transaction Query
  /api/transaction-query/merchant/{merchant_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a list of transactions using the merchant ID
      parameters:
      - description: Merchant ID
        in: query
        name: merchant_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transaction data
          schema:
            $ref: '#/definitions/response.ApiResponseTransactions'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find transactions by merchant ID
      tags:
      - Transaction Query
  /api/transaction-query/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed transactions
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: page_size
        type: integer
      - description: Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransactions'
        "500":
          description: Failed to retrieve transaction data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed transactions
      tags:
      - Transaction Query
  /api/transaction-stats-amount/monthly-amounts:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transaction amounts for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction amounts
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionMonthAmount'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transaction amounts
      tags:
      - Transaction Stats Amount
  /api/transaction-stats-amount/monthly-amounts-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transaction amounts for a specific card number
        and year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction amounts by card number
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionMonthAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction amounts by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transaction amounts by card number
      tags:
      - Transaction Stats Amount
  /api/transaction-stats-amount/yearly-amounts:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transaction amounts for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction amounts
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionYearAmount'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transaction amounts
      tags:
      - Transaction Stats Amount
  /api/transaction-stats-amount/yearly-amounts-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transaction amounts for a specific card number
        and year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction amounts by card number
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionYearAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction amounts by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transaction amounts by card number
      tags:
      - Transaction Stats Amount
  /api/transaction-stats-method/monthly-payment-methods:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly payment methods for transactions by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly payment methods
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionMonthMethod'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly payment methods
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly payment methods
      tags:
      - Transaction Stats Method
  /api/transaction-stats-method/monthly-payment-methods-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly payment methods for transactions by card number
        and year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly payment methods by card number
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionMonthMethod'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly payment methods by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly payment methods by card number
      tags:
      - Transaction Stats Method
  /api/transaction-stats-method/yearly-payment-methods:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly payment methods for transactions by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly payment methods
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionYearMethod'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly payment methods
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly payment methods
      tags:
      - Transaction Stats Method
  /api/transaction-stats-method/yearly-payment-methods-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly payment methods for transactions by card number
        and year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly payment methods by card number
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionYearMethod'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly payment methods by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly payment methods by card number
      tags:
      - Transaction Stats Method
  /api/transaction-stats-status/monthly-failed:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transaction status for failed transactions
        by year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction status for failed transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionMonthStatusFailed'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transaction status for failed transactions
      tags:
      - Transaction Stats Status
  /api/transaction-stats-status/monthly-failed-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transaction status for failed transactions
        by year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      - description: Card Number
        in: query
        name: cardNumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction status for failed transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionMonthStatusFailed'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transaction status for failed transactions
      tags:
      - Transaction Stats Status
  /api/transaction-stats-status/monthly-success:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transaction status for successful transactions
        by year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction status for successful transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionMonthStatusSuccess'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction status for successful
            transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transaction status for successful transactions
      tags:
      - Transaction Stats Status
  /api/transaction-stats-status/monthly-success-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transaction status for successful transactions
        by year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transaction status for successful transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionMonthStatusSuccess'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transaction status for successful
            transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transaction status for successful transactions
      tags:
      - Transaction Stats Status
  /api/transaction-stats-status/yearly-failed:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transaction status for failed transactions
        by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction status for failed transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionYearStatusFailed'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transaction status for failed transactions
      tags:
      - Transaction Stats Status
  /api/transaction-stats-status/yearly-failed-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transaction status for failed transactions
        by year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction status for failed transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionYearStatusFailed'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transaction status for failed transactions
      tags:
      - Transaction Stats Status
  /api/transaction-stats-status/yearly-success:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transaction status for successful transactions
        by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction status for successful transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionYearStatusSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction status for successful
            transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transaction status for successful transactions
      tags:
      - Transaction Stats Status
  /api/transaction-stats-status/yearly-success-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transaction status for successful transactions
        by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: cardNumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transaction status for successful transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransactionYearStatusSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transaction status for successful
            transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transaction status for successful transactions
      tags:
      - Transaction Stats Status
  /api/transfer-command/create:
    post:
      consumes:
      - application/json
      description: Create a new transfer record
      parameters:
      - description: Transfer request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.CreateTransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Transfer data
          schema:
            $ref: '#/definitions/response.ApiResponseTransfer'
        "400":
          description: Validation Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create transfer
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a transfer
      tags:
      - Transfer Command
  /api/transfer-command/permanent/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a transfer record by its ID.
      parameters:
      - description: Transfer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted transfer record permanently
          schema:
            $ref: '#/definitions/response.ApiResponseTransferDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete transfer:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a transfer
      tags:
      - Transfer Command
  /api/transfer-command/permanent/all:
    post:
      consumes:
      - application/json
      description: Permanently delete a transfer record all.
      parameters:
      - description: Transfer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted transfer all
          schema:
            $ref: '#/definitions/response.ApiResponseTransferAll'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete transfer:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a transfer
      tags:
      - Transfer Command
  /api/transfer-command/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a trashed transfer record by its ID.
      parameters:
      - description: Transfer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored transfer record
          schema:
            $ref: '#/definitions/response.ApiResponseTransfer'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to restore transfer:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed transfer
      tags:
      - Transfer Command
  /api/transfer-command/restore/all:
    post:
      consumes:
      - application/json
      description: Restore a trashed transfer all
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored transfer record
          schema:
            $ref: '#/definitions/response.ApiResponseTransferAll'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to restore transfer:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed transfer
      tags:
      - Transfer Command
  /api/transfer-command/trash/{id}:
    post:
      consumes:
      - application/json
      description: Soft delete a transfer record by its ID.
      parameters:
      - description: Transfer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully trashed transfer record
          schema:
            $ref: '#/definitions/response.ApiResponseTransfer'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to trashed transfer
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Soft delete a transfer
      tags:
      - Transfer Command
  /api/transfer-command/update/{id}:
    post:
      consumes:
      - application/json
      description: Update an existing transfer record
      parameters:
      - description: Transfer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Transfer request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateTransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Transfer data
          schema:
            $ref: '#/definitions/response.ApiResponseTransfer'
        "400":
          description: Validation Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update transfer
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update a transfer
      tags:
      - Transfer Command
  /api/transfer-query:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all transfer records with pagination
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of transfer records
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationTransfer'
        "500":
          description: Failed to retrieve transfer data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all transfer records
      tags:
      - Transfer Query
  /api/transfer-query/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a transfer record using its ID
      parameters:
      - description: Transfer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transfer data
          schema:
            $ref: '#/definitions/response.ApiResponseTransfer'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve transfer data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a transfer by ID
      tags:
      - Transfer Query
  /api/transfer-query/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of active transfer records
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: page_size
        type: integer
      - description: Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Active transfer data
          schema:
            $ref: '#/definitions/response.ApiResponseTransfers'
        "500":
          description: Failed to retrieve transfer data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find active transfers
      tags:
      - Transfer Query
  /api/transfer-query/transfer_from/{transfer_from}:
    get:
      consumes:
      - application/json
      description: Retrieve a list of transfer records using the transfer_from parameter
      parameters:
      - description: Transfer From
        in: path
        name: transfer_from
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transfer data
          schema:
            $ref: '#/definitions/response.ApiResponseTransfers'
        "500":
          description: Failed to retrieve transfer data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find transfers by transfer_from
      tags:
      - Transfer Query
  /api/transfer-query/transfer_to/{transfer_to}:
    get:
      consumes:
      - application/json
      description: Retrieve a list of transfer records using the transfer_to parameter
      parameters:
      - description: Transfer To
        in: path
        name: transfer_to
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transfer data
          schema:
            $ref: '#/definitions/response.ApiResponseTransfers'
        "500":
          description: Failed to retrieve transfer data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find transfers by transfer_to
      tags:
      - Transfer Query
  /api/transfer-query/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed transfer records
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: page_size
        type: integer
      - description: Search keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed transfer records
          schema:
            $ref: '#/definitions/response.ApiResponseTransfers'
        "500":
          description: Failed to retrieve transfer data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed transfers
      tags:
      - Transfer Query
  /api/transfer-stats-amount/monthly-amounts:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transfer amounts for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transfer amounts
          schema:
            $ref: '#/definitions/response.ApiResponseTransferMonthAmount'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transfer amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer amounts
      tags:
      - Transfer Stats Amount
  /api/transfer-stats-amount/monthly-amounts-by-receiver-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transfer amounts for a specific receiver card
        number and year.
      parameters:
      - description: Receiver Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transfer amounts by receiver card number
          schema:
            $ref: '#/definitions/response.ApiResponseTransferMonthAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transfer amounts by receiver card
            number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer amounts by receiver card number
      tags:
      - Transfer Stats Amount
  /api/transfer-stats-amount/monthly-amounts-by-sender-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transfer amounts for a specific sender card
        number and year.
      parameters:
      - description: Sender Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transfer amounts by sender card number
          schema:
            $ref: '#/definitions/response.ApiResponseTransferMonthAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transfer amounts by sender card
            number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer amounts by sender card number
      tags:
      - Transfer Stats Amount
  /api/transfer-stats-amount/yearly-amounts:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transfer amounts for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transfer amounts
          schema:
            $ref: '#/definitions/response.ApiResponseTransferYearAmount'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transfer amounts
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer amounts
      tags:
      - Transfer Stats Amount
  /api/transfer-stats-amount/yearly-amounts-by-receiver-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transfer amounts for a specific receiver card
        number and year.
      parameters:
      - description: Receiver Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transfer amounts by receiver card number
          schema:
            $ref: '#/definitions/response.ApiResponseTransferYearAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transfer amounts by receiver card
            number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer amounts by receiver card number
      tags:
      - Transfer Stats Amount
  /api/transfer-stats-amount/yearly-amounts-by-sender-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transfer amounts for a specific sender card
        number and year.
      parameters:
      - description: Sender Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transfer amounts by sender card number
          schema:
            $ref: '#/definitions/response.ApiResponseTransferYearAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transfer amounts by sender card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer amounts by sender card number
      tags:
      - Transfer Stats Amount
  /api/transfer-stats-status/monthly-failed:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transfer status for failed transactions by
        year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transfer status for failed transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransferMonthStatusFailed'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transfer status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer status for failed transactions
      tags:
      - Transfer Stats Status
  /api/transfer-stats-status/monthly-failed-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transfer status for failed transactions by
        year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transfer status for failed transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransferMonthStatusFailed'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transfer status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer status for failed transactions
      tags:
      - Transfer Stats Status
  /api/transfer-stats-status/monthly-success:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transfer status for successful transactions
        by year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transfer status for successful transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransferMonthStatusSuccess'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transfer status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer status for successful transactions
      tags:
      - Transfer Stats Status
  /api/transfer-stats-status/monthly-success-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly transfer status for successful transactions
        by year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly transfer status for successful transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransferMonthStatusSuccess'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly transfer status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly transfer status for successful transactions
      tags:
      - Transfer Stats Status
  /api/transfer-stats-status/yearly-failed:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transfer status for failed transactions by
        year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transfer status for failed transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransferYearStatusFailed'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transfer status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer status for failed transactions
      tags:
      - Transfer Stats Status
  /api/transfer-stats-status/yearly-failed-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transfer status for failed transactions by
        year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transfer status for failed transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransferYearStatusFailed'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transfer status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer status for failed transactions
      tags:
      - Transfer Stats Status
  /api/transfer-stats-status/yearly-success:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transfer status for successful transactions
        by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transfer status for successful transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransferYearStatusSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transfer status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer status for successful transactions
      tags:
      - Transfer Stats Status
  /api/transfer-stats-status/yearly-success-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly transfer status for successful transactions
        by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Yearly transfer status for successful transactions
          schema:
            $ref: '#/definitions/response.ApiResponseTransferYearStatusSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly transfer status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly transfer status for successful transactions
      tags:
      - Transfer Stats Status
  /api/user-command/create:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided details
      parameters:
      - description: Create user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created user
          schema:
            $ref: '#/definitions/response.ApiResponseUser'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new user
      tags:
      - User Command
  /api/user-command/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a user record by its ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted user record permanently
          schema:
            $ref: '#/definitions/response.ApiResponseUserDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete user:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a user
      tags:
      - User Command
  /api/user-command/delete/all:
    post:
      consumes:
      - application/json
      description: Permanently delete a user record by its ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted user record permanently
          schema:
            $ref: '#/definitions/response.ApiResponseUserDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete user:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a user
      tags:
      - User Command
  /api/user-command/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a trashed user record by its ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored user
          schema:
            $ref: '#/definitions/response.ApiResponseUser'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed user
      tags:
      - User Command
  /api/user-command/restore/all:
    post:
      consumes:
      - application/json
      description: Restore a trashed user record by its ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully restored user all
          schema:
            $ref: '#/definitions/response.ApiResponseUserAll'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a trashed user
      tags:
      - User Command
  /api/user-command/trashed/{id}:
    post:
      consumes:
      - application/json
      description: Retrieve a trashed user record by its ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved trashed user
          schema:
            $ref: '#/definitions/response.ApiResponseUser'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve trashed user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve a trashed user
      tags:
      - User Command
  /api/user-command/update/{id}:
    post:
      consumes:
      - application/json
      description: Update an existing user record with the provided details
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update user request
        in: body
        name: UpdateUserRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated user
          schema:
            $ref: '#/definitions/response.ApiResponseUser'
        "400":
          description: Invalid request body or validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update an existing user
      tags:
      - User Command
  /api/user-query:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all users
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationUser'
        "500":
          description: Failed to retrieve user data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all users
      tags:
      - User Command
  /api/user-query/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User data
          schema:
            $ref: '#/definitions/response.ApiResponseUser'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve user data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find user by ID
      tags:
      - User Command
  /api/user-query/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of active users
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of active users
          schema:
            $ref: '#/definitions/response.ApiResponsesUser'
        "500":
          description: Failed to retrieve user data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve active users
      tags:
      - User Command
  /api/user-query/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed user records
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed user data
          schema:
            $ref: '#/definitions/response.ApiResponsesUser'
        "500":
          description: Failed to retrieve user data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed users
      tags:
      - User Command
  /api/withdraw-command/create:
    post:
      consumes:
      - application/json
      description: Create a new withdraw record with the provided details.
      parameters:
      - description: Create Withdraw Request
        in: body
        name: CreateWithdrawRequest
        required: true
        schema:
          $ref: '#/definitions/requests.CreateWithdrawRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created withdraw record
          schema:
            $ref: '#/definitions/response.ApiResponseWithdraw'
        "400":
          description: 'Bad Request: Invalid request body or validation error'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create withdraw
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Create a new withdraw
      tags:
      - Withdraw Command
  /api/withdraw-command/permanent/{id}:
    delete:
      consumes:
      - application/json
      description: Permanently delete a withdraw by its ID
      parameters:
      - description: Withdraw ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted withdraw permanently
          schema:
            $ref: '#/definitions/response.ApiResponseWithdrawDelete'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete withdraw permanently:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a withdraw by ID
      tags:
      - Withdraw Command
  /api/withdraw-command/permanent/all:
    post:
      consumes:
      - application/json
      description: Permanently delete a withdraw by its ID
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted withdraw permanently
          schema:
            $ref: '#/definitions/response.ApiResponseWithdrawAll'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: 'Failed to delete withdraw permanently:'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Permanently delete a withdraw by ID
      tags:
      - Withdraw Command
  /api/withdraw-command/restore/{id}:
    post:
      consumes:
      - application/json
      description: Restore a withdraw by its ID
      parameters:
      - description: Withdraw ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Withdraw data
          schema:
            $ref: '#/definitions/response.ApiResponseWithdraw'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore withdraw
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a withdraw by ID
      tags:
      - Withdraw Command
  /api/withdraw-command/restore/all:
    post:
      consumes:
      - application/json
      description: Restore a withdraw all
      produces:
      - application/json
      responses:
        "200":
          description: Withdraw data
          schema:
            $ref: '#/definitions/response.ApiResponseWithdrawAll'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to restore withdraw
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Restore a withdraw all
      tags:
      - Withdraw Command
  /api/withdraw-command/trashed/{id}:
    post:
      consumes:
      - application/json
      description: Trash a withdraw using its ID
      parameters:
      - description: Withdraw ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Withdaw data
          schema:
            $ref: '#/definitions/response.ApiResponseWithdraw'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to trash withdraw
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Trash a withdraw by ID
      tags:
      - Withdraw Command
  /api/withdraw-command/update/{id}:
    post:
      consumes:
      - application/json
      description: Update an existing withdraw record with the provided details.
      parameters:
      - description: Withdraw ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Withdraw Request
        in: body
        name: UpdateWithdrawRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateWithdrawRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated withdraw record
          schema:
            $ref: '#/definitions/response.ApiResponseWithdraw'
        "400":
          description: 'Bad Request: Invalid request body or validation error'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to update withdraw
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Update an existing withdraw
      tags:
      - Withdraw Command
  /api/withdraw-query:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all withdraw records with pagination and search
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of withdraw records
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationWithdraw'
        "500":
          description: Failed to retrieve withdraw data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all withdraw records
      tags:
      - Withdraw Query
  /api/withdraw-query-query/active:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all active withdraw data
      produces:
      - application/json
      responses:
        "200":
          description: List of withdraw data
          schema:
            $ref: '#/definitions/response.ApiResponsesWithdraw'
        "500":
          description: Failed to retrieve withdraw data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve all active withdraw data
      tags:
      - Withdraw Query
  /api/withdraw-query-query/trashed:
    get:
      consumes:
      - application/json
      description: Retrieve a list of trashed withdraw data
      produces:
      - application/json
      responses:
        "200":
          description: List of trashed withdraw data
          schema:
            $ref: '#/definitions/response.ApiResponsesWithdraw'
        "500":
          description: Failed to retrieve withdraw data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Retrieve trashed withdraw data
      tags:
      - Withdraw Query
  /api/withdraw-query/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a withdraw record using its ID
      parameters:
      - description: Withdraw ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Withdraw data
          schema:
            $ref: '#/definitions/response.ApiResponseWithdraw'
        "400":
          description: 'Bad Request: Invalid ID'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve withdraw data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a withdraw by ID
      tags:
      - Withdraw Query
  /api/withdraw-query/card-number/{card_number}:
    get:
      consumes:
      - application/json
      description: Retrieve a list of withdraw records for a specific card number
        with pagination and search
      parameters:
      - description: Card Number
        in: path
        name: card_number
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of withdraw records
          schema:
            $ref: '#/definitions/response.ApiResponsePaginationWithdraw'
        "500":
          description: Failed to retrieve withdraw data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find all withdraw records by card number
      tags:
      - Withdraw Query
  /api/withdraw-query/card/{card_number}:
    get:
      consumes:
      - application/json
      description: Retrieve a withdraw record using its card number
      parameters:
      - description: Card number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Withdraw data
          schema:
            $ref: '#/definitions/response.ApiResponsesWithdraw'
        "400":
          description: 'Bad Request: Invalid card number'
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve withdraw data
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Find a withdraw by card number
      tags:
      - Withdraw
  /api/withdraw-stats-amount/monthly:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly withdraws for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly withdraws
          schema:
            $ref: '#/definitions/response.ApiResponseWithdrawMonthAmount'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly withdraws
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly withdraws
      tags:
      - Withdraw Stats Amount
  /api/withdraw-stats-amount/monthly-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly withdraws for a specific card number and year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly withdraws by card number
          schema:
            $ref: '#/definitions/response.ApiResponseWithdrawMonthAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly withdraws by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly withdraws by card number
      tags:
      - Withdraw Stats Amount
  /api/withdraw-stats-amount/yearly:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly withdraws for a specific year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly withdraws
          schema:
            $ref: '#/definitions/response.ApiResponseWithdrawYearAmount'
        "400":
          description: Invalid year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly withdraws
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly withdraws
      tags:
      - Withdraw Stats Amount
  /api/withdraw-stats-amount/yearly-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly withdraws for a specific card number and year.
      parameters:
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly withdraws by card number
          schema:
            $ref: '#/definitions/response.ApiResponseWithdrawYearAmount'
        "400":
          description: Invalid card number or year parameter
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly withdraws by card number
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly withdraws by card number
      tags:
      - Withdraw Stats Amount
  /api/withdraw-stats-status/monthly-failed:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly withdraw status for failed transactions by
        year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly withdraw status for failed transactions
          schema:
            $ref: '#/definitions/response.ApiResponseWithdrawMonthStatusFailed'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly withdraw status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly withdraw status for failed transactions
      tags:
      - Withdraw Stats Withdraw
  /api/withdraw-stats-status/monthly-failed-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly withdraw status for failed transactions by
        year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Monthly withdraw status for failed transactions
          schema:
            $ref: '#/definitions/response.ApiResponseWithdrawMonthStatusFailed'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly withdraw status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly withdraw status for failed transactions
      tags:
      - Withdraw Stats Withdraw
  /api/withdraw-stats-status/monthly-success:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly withdraw status for successful transactions
        by year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Monthly withdraw status for successful transactions
          schema:
            $ref: '#/definitions/response.ApiResponseWithdrawMonthStatusSuccess'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly withdraw status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly withdraw status for successful transactions
      tags:
      - Withdraw Stats Withdraw
  /api/withdraw-stats-status/monthly-success-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the monthly withdraw status for successful transactions
        by year and month.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Monthly withdraw status for successful transactions
          schema:
            $ref: '#/definitions/response.ApiResponseWithdrawMonthStatusSuccess'
        "400":
          description: Invalid year or month
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve monthly withdraw status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get monthly withdraw status for successful transactions
      tags:
      - Withdraw Stats Withdraw
  /api/withdraw-stats-status/yearly-failed:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly withdraw status for failed transactions by
        year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly withdraw status for failed transactions
          schema:
            $ref: '#/definitions/response.ApiResponseWithdrawYearStatusSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly withdraw status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly withdraw status for failed transactions
      tags:
      - Withdraw Stats Withdraw
  /api/withdraw-stats-status/yearly-failed-by-card:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly withdraw status for failed transactions by
        year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Yearly withdraw status for failed transactions
          schema:
            $ref: '#/definitions/response.ApiResponseWithdrawYearStatusSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly withdraw status for failed transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly withdraw status for failed transactions
      tags:
      - Withdraw Stats Withdraw
  /api/withdraw-stats-status/yearly-success:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly withdraw status for successful transactions
        by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Yearly withdraw status for successful transactions
          schema:
            $ref: '#/definitions/response.ApiResponseWithdrawYearStatusSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly withdraw status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly withdraw status for successful transactions
      tags:
      - Withdraw Stats Withdraw
  /api/withdraw-stats-status/yearly-success-by-card-number:
    get:
      consumes:
      - application/json
      description: Retrieve the yearly withdraw status for successful transactions
        by year.
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      - description: Card Number
        in: query
        name: card_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Yearly withdraw status for successful transactions
          schema:
            $ref: '#/definitions/response.ApiResponseWithdrawYearStatusSuccess'
        "400":
          description: Invalid year
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to retrieve yearly withdraw status for successful transactions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get yearly withdraw status for successful transactions
      tags:
      - Withdraw Stats Withdraw
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Initiates password reset by sending a reset token to the provided
        email.
      parameters:
      - description: Forgot Password Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseForgotPassword'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Sends a reset token to the user's email
      tags:
      - Auth
  /auth/hello:
    get:
      description: Returns a simple "Hello" message for testing purposes.
      produces:
      - application/json
      responses:
        "200":
          description: Hello
          schema:
            type: string
      summary: Returns a "Hello" message
      tags:
      - Auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Allows user to reset their password using a valid reset token.
      parameters:
      - description: Reset Password Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.CreateResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseResetPassword'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Resets the user's password using a reset token
      tags:
      - Auth
  /auth/verify-code:
    get:
      description: Verifies the user's email using the verification code provided
        in the query parameter.
      parameters:
      - description: Verification Code
        in: query
        name: verify_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponseVerifyCode'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Verifies the user using a verification code
      tags:
      - Auth
swagger: "2.0"
